<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'http://mybatis.org/dtd/mybatis-3-mapper.dtd'><mapper namespace='RefundOrder'>  <resultMap type='BRP.data.RefundOrder' id='RefundOrderResultMap' >    <result column='id' property='id' />    <result column='refund_type_code' property='refundTypeCode' />    <result column='pay_order_id' property='payOrderId' />    <result column='member_id' property='memberId' />    <result column='book_id' property='bookId' />    <result column='refund_amount' property='refundAmount' />    <result column='operator_id' property='operatorId' />    <result column='member_fee' property='memberFee' />    <result column='bookcase_fee' property='bookcaseFee' />    <result column='deposit_fee' property='depositFee' />    <result column='damage_fee' property='damageFee' />    <result column='company_id' property='companyId' />    <result column='remark' property='remark' />    <result column='is_cancel_member' property='isCancelMember' />    <result column='is_cancel_bookbox' property='isCancelBookbox' />    <result column='is_recover_book' property='isRecoverBook' />    <result column='refunder_id' property='refunderId' />    <result column='create_time' property='createTime' />    <result column='update_time' property='updateTime' />  </resultMap>  <insert id='insertRefundOrder' parameterType='BRP.data.RefundOrder' keyProperty='id' useGeneratedKeys='true'>    insert into refund_order    (id,refund_type_code,pay_order_id,member_id,book_id,refund_amount,operator_id,member_fee,bookcase_fee,deposit_fee,damage_fee,company_id,remark,is_cancel_member,is_cancel_bookbox,is_recover_book,refunder_id,create_time,update_time)    values    (#{id},#{refundTypeCode},#{payOrderId},#{memberId},#{bookId},#{refundAmount},#{operatorId},#{memberFee},#{bookcaseFee},#{depositFee},#{damageFee},#{companyId},#{remark},#{isCancelMember},#{isCancelBookbox},#{isRecoverBook},#{refunderId},now(),now())  </insert>  <select id='selectRefundOrder' parameterType='java.lang.Integer' resultMap='RefundOrderResultMap'>    select * from refund_order where id=#{id}  </select>  <update id='updateRefundOrder' parameterType='BRP.data.RefundOrder'>    update refund_order set id=#{id},refund_type_code=#{refundTypeCode},pay_order_id=#{payOrderId},member_id=#{memberId},book_id=#{bookId},refund_amount=#{refundAmount},operator_id=#{operatorId},member_fee=#{memberFee},bookcase_fee=#{bookcaseFee},deposit_fee=#{depositFee},damage_fee=#{damageFee},company_id=#{companyId},remark=#{remark},is_cancel_member=#{isCancelMember},is_cancel_bookbox=#{isCancelBookbox},is_recover_book=#{isRecoverBook},refunder_id=#{refunderId},create_time=#{createTime},update_time=#{updateTime}    where id=#{id}  </update>  <delete id='deleteRefundOrder' parameterType='java.lang.Integer'>    delete from refund_order where id=#{id}  </delete>  <select id='selectRefundOrderByCompanyId' parameterType='java.lang.Integer' resultMap='RefundOrderResultMap'>    select * from refund_order where company_id=#{companyId}  </select>  <select id='selectRefundOrderByMemberId' parameterType='java.lang.Integer' resultMap='RefundOrderResultMap'>    select * from refund_order where member_id=#{memberId}  </select>  <select id='selectRefundOrderByOperatorId' parameterType='java.lang.Integer' resultMap='RefundOrderResultMap'>    select * from refund_order where operator_id=#{operatorId}  </select>  <select id='selectRefundOrderByPayOrderId' parameterType='java.lang.Integer' resultMap='RefundOrderResultMap'>    select * from refund_order where pay_order_id=#{payOrderId}  </select>  <select id='selectRefundOrderByRefundTypeCode' parameterType='java.lang.String' resultMap='RefundOrderResultMap'>    select * from refund_order where refund_type_code=#{refundTypeCode}  </select>  <select id='selectRefundOrderByRefunderId' parameterType='java.lang.Integer' resultMap='RefundOrderResultMap'>    select * from refund_order where refunder_id=#{refunderId}  </select>  <delete id='deleteRefundOrderByCompanyId' parameterType='java.lang.Integer'>    delete from refund_order where company_id=#{companyId}  </delete>  <delete id='deleteRefundOrderByMemberId' parameterType='java.lang.Integer'>    delete from refund_order where member_id=#{memberId}  </delete>  <delete id='deleteRefundOrderByOperatorId' parameterType='java.lang.Integer'>    delete from refund_order where operator_id=#{operatorId}  </delete>  <delete id='deleteRefundOrderByPayOrderId' parameterType='java.lang.Integer'>    delete from refund_order where pay_order_id=#{payOrderId}  </delete>  <delete id='deleteRefundOrderByRefundTypeCode' parameterType='java.lang.String'>    delete from refund_order where refund_type_code=#{refundTypeCode}  </delete>  <delete id='deleteRefundOrderByRefunderId' parameterType='java.lang.Integer'>    delete from refund_order where refunder_id=#{refunderId}  </delete>  <insert id='insertRefundOrders' parameterType='java.util.List'>    insert into refund_order    (id,refund_type_code,pay_order_id,member_id,book_id,refund_amount,operator_id,member_fee,bookcase_fee,deposit_fee,damage_fee,company_id,remark,is_cancel_member,is_cancel_bookbox,is_recover_book,refunder_id,create_time,update_time)    values   <foreach collection='list' item='item' index='index' separator=','>    (#{item.id},#{item.refundTypeCode},#{item.payOrderId},#{item.memberId},#{item.bookId},#{item.refundAmount},#{item.operatorId},#{item.memberFee},#{item.bookcaseFee},#{item.depositFee},#{item.damageFee},#{item.companyId},#{item.remark},#{item.isCancelMember},#{item.isCancelBookbox},#{item.isRecoverBook},#{item.refunderId},now(),#{item.updateTime})   </foreach>  </insert>  <select id='selectRefundOrders' resultMap='RefundOrderResultMap'>    select * from refund_order  </select>  <select id='selectRefundOrderBySql' parameterType='java.lang.String' resultMap='RefundOrderResultMap'>    ${value}  </select>  <delete id='deleteRefundOrderBySql' parameterType='java.lang.String'>    ${value}  </delete>  <update id='updateRefundOrderBySql' parameterType='java.lang.String'>    ${value}  </update>  <select id='selectRefundOrderByCondition' parameterType='java.lang.String' resultMap='RefundOrderResultMap'>    select * from refund_order where ${value}  </select>  <select id='selectCountByCondition' parameterType='java.lang.String' resultType='java.lang.Integer'>    select count(*) from refund_order where ${value}  </select>  <select id='selectIntBySql' parameterType='java.lang.String' resultType='java.lang.Integer'>    ${value}  </select>  <select id='selectStringBySql' parameterType='java.lang.String' resultType='java.lang.String'>    ${value}  </select></mapper>