<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'http://mybatis.org/dtd/mybatis-3-mapper.dtd'><mapper namespace='MemberBorrowQuantityLog'>  <resultMap type='BRP.data.MemberBorrowQuantityLog' id='MemberBorrowQuantityLogResultMap' >    <result column='id' property='id' />    <result column='member_id' property='memberId' />    <result column='quantity' property='quantity' />    <result column='start_date' property='startDate' />    <result column='end_date' property='endDate' />    <result column='member_borrow_quantity_type_code' property='memberBorrowQuantityTypeCode' />    <result column='activity_name' property='activityName' />    <result column='remark' property='remark' />    <result column='is_reduced' property='isReduced' />    <result column='is_deleted' property='isDeleted' />    <result column='create_time' property='createTime' />    <result column='update_time' property='updateTime' />  </resultMap>  <insert id='insertMemberBorrowQuantityLog' parameterType='BRP.data.MemberBorrowQuantityLog' keyProperty='id' useGeneratedKeys='true'>    insert into member_borrow_quantity_log    (id,member_id,quantity,start_date,end_date,member_borrow_quantity_type_code,activity_name,remark,is_reduced,is_deleted,create_time,update_time)    values    (#{id},#{memberId},#{quantity},#{startDate},#{endDate},#{memberBorrowQuantityTypeCode},#{activityName},#{remark},#{isReduced},#{isDeleted},now(),now())  </insert>  <select id='selectMemberBorrowQuantityLog' parameterType='java.lang.Integer' resultMap='MemberBorrowQuantityLogResultMap'>    select * from member_borrow_quantity_log where id=#{id}  </select>  <update id='updateMemberBorrowQuantityLog' parameterType='BRP.data.MemberBorrowQuantityLog'>    update member_borrow_quantity_log set id=#{id},member_id=#{memberId},quantity=#{quantity},start_date=#{startDate},end_date=#{endDate},member_borrow_quantity_type_code=#{memberBorrowQuantityTypeCode},activity_name=#{activityName},remark=#{remark},is_reduced=#{isReduced},is_deleted=#{isDeleted},create_time=#{createTime},update_time=#{updateTime}    where id=#{id}  </update>  <delete id='deleteMemberBorrowQuantityLog' parameterType='java.lang.Integer'>    delete from member_borrow_quantity_log where id=#{id}  </delete>  <select id='selectMemberBorrowQuantityLogByMemberId' parameterType='java.lang.Integer' resultMap='MemberBorrowQuantityLogResultMap'>    select * from member_borrow_quantity_log where member_id=#{memberId}  </select>  <select id='selectMemberBorrowQuantityLogByMemberBorrowQuantityTypeCode' parameterType='java.lang.String' resultMap='MemberBorrowQuantityLogResultMap'>    select * from member_borrow_quantity_log where member_borrow_quantity_type_code=#{memberBorrowQuantityTypeCode}  </select>  <delete id='deleteMemberBorrowQuantityLogByMemberId' parameterType='java.lang.Integer'>    delete from member_borrow_quantity_log where member_id=#{memberId}  </delete>  <delete id='deleteMemberBorrowQuantityLogByMemberBorrowQuantityTypeCode' parameterType='java.lang.String'>    delete from member_borrow_quantity_log where member_borrow_quantity_type_code=#{memberBorrowQuantityTypeCode}  </delete>  <insert id='insertMemberBorrowQuantityLogs' parameterType='java.util.List'>    insert into member_borrow_quantity_log    (id,member_id,quantity,start_date,end_date,member_borrow_quantity_type_code,activity_name,remark,is_reduced,is_deleted,create_time,update_time)    values   <foreach collection='list' item='item' index='index' separator=','>    (#{item.id},#{item.memberId},#{item.quantity},#{item.startDate},#{item.endDate},#{item.memberBorrowQuantityTypeCode},#{item.activityName},#{item.remark},#{item.isReduced},#{item.isDeleted},now(),#{item.updateTime})   </foreach>  </insert>  <select id='selectMemberBorrowQuantityLogs' resultMap='MemberBorrowQuantityLogResultMap'>    select * from member_borrow_quantity_log  </select>  <select id='selectMemberBorrowQuantityLogBySql' parameterType='java.lang.String' resultMap='MemberBorrowQuantityLogResultMap'>    ${value}  </select>  <delete id='deleteMemberBorrowQuantityLogBySql' parameterType='java.lang.String'>    ${value}  </delete>  <update id='updateMemberBorrowQuantityLogBySql' parameterType='java.lang.String'>    ${value}  </update>  <select id='selectMemberBorrowQuantityLogByCondition' parameterType='java.lang.String' resultMap='MemberBorrowQuantityLogResultMap'>    select * from member_borrow_quantity_log where ${value}  </select>  <select id='selectCountByCondition' parameterType='java.lang.String' resultType='java.lang.Integer'>    select count(*) from member_borrow_quantity_log where ${value}  </select>  <select id='selectIntBySql' parameterType='java.lang.String' resultType='java.lang.Integer'>    ${value}  </select>  <select id='selectStringBySql' parameterType='java.lang.String' resultType='java.lang.String'>    ${value}  </select></mapper>