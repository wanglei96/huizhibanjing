<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'http://mybatis.org/dtd/mybatis-3-mapper.dtd'><mapper namespace='BookOrderItem'>  <resultMap type='BRP.data.BookOrderItem' id='BookOrderItemResultMap' >    <result column='id' property='id' />    <result column='book_order_id' property='bookOrderId' />    <result column='book_id' property='bookId' />    <result column='is_damage' property='isDamage' />    <result column='book_order_type_code' property='bookOrderTypeCode' />    <result column='deliver_status_code' property='deliverStatusCode' />    <result column='is_returned' property='isReturned' />    <result column='is_abnormal' property='isAbnormal' />    <result column='abnormal_contnet' property='abnormalContnet' />    <result column='book_return_time' property='bookReturnTime' />    <result column='book_in_stocks_time' property='bookInStocksTime' />    <result column='create_time' property='createTime' />    <result column='update_time' property='updateTime' />  </resultMap>  <insert id='insertBookOrderItem' parameterType='BRP.data.BookOrderItem' keyProperty='id' useGeneratedKeys='true'>    insert into book_order_item    (id,book_order_id,book_id,is_damage,book_order_type_code,deliver_status_code,is_returned,is_abnormal,abnormal_contnet,book_return_time,book_in_stocks_time,create_time,update_time)    values    (#{id},#{bookOrderId},#{bookId},#{isDamage},#{bookOrderTypeCode},#{deliverStatusCode},#{isReturned},#{isAbnormal},#{abnormalContnet},#{bookReturnTime},#{bookInStocksTime},now(),now())  </insert>  <select id='selectBookOrderItem' parameterType='java.lang.Integer' resultMap='BookOrderItemResultMap'>    select * from book_order_item where id=#{id}  </select>  <update id='updateBookOrderItem' parameterType='BRP.data.BookOrderItem'>    update book_order_item set id=#{id},book_order_id=#{bookOrderId},book_id=#{bookId},is_damage=#{isDamage},book_order_type_code=#{bookOrderTypeCode},deliver_status_code=#{deliverStatusCode},is_returned=#{isReturned},is_abnormal=#{isAbnormal},abnormal_contnet=#{abnormalContnet},book_return_time=#{bookReturnTime},book_in_stocks_time=#{bookInStocksTime},create_time=#{createTime},update_time=#{updateTime}    where id=#{id}  </update>  <delete id='deleteBookOrderItem' parameterType='java.lang.Integer'>    delete from book_order_item where id=#{id}  </delete>  <select id='selectBookOrderItemByBookId' parameterType='java.lang.Integer' resultMap='BookOrderItemResultMap'>    select * from book_order_item where book_id=#{bookId}  </select>  <select id='selectBookOrderItemByBookOrderId' parameterType='java.lang.Integer' resultMap='BookOrderItemResultMap'>    select * from book_order_item where book_order_id=#{bookOrderId}  </select>  <select id='selectBookOrderItemByBookOrderTypeCode' parameterType='java.lang.String' resultMap='BookOrderItemResultMap'>    select * from book_order_item where book_order_type_code=#{bookOrderTypeCode}  </select>  <select id='selectBookOrderItemByDeliverStatusCode' parameterType='java.lang.String' resultMap='BookOrderItemResultMap'>    select * from book_order_item where deliver_status_code=#{deliverStatusCode}  </select>  <delete id='deleteBookOrderItemByBookId' parameterType='java.lang.Integer'>    delete from book_order_item where book_id=#{bookId}  </delete>  <delete id='deleteBookOrderItemByBookOrderId' parameterType='java.lang.Integer'>    delete from book_order_item where book_order_id=#{bookOrderId}  </delete>  <delete id='deleteBookOrderItemByBookOrderTypeCode' parameterType='java.lang.String'>    delete from book_order_item where book_order_type_code=#{bookOrderTypeCode}  </delete>  <delete id='deleteBookOrderItemByDeliverStatusCode' parameterType='java.lang.String'>    delete from book_order_item where deliver_status_code=#{deliverStatusCode}  </delete>  <insert id='insertBookOrderItems' parameterType='java.util.List'>    insert into book_order_item    (id,book_order_id,book_id,is_damage,book_order_type_code,deliver_status_code,is_returned,is_abnormal,abnormal_contnet,book_return_time,book_in_stocks_time,create_time,update_time)    values   <foreach collection='list' item='item' index='index' separator=','>    (#{item.id},#{item.bookOrderId},#{item.bookId},#{item.isDamage},#{item.bookOrderTypeCode},#{item.deliverStatusCode},#{item.isReturned},#{item.isAbnormal},#{item.abnormalContnet},#{item.bookReturnTime},#{item.bookInStocksTime},now(),#{item.updateTime})   </foreach>  </insert>  <select id='selectBookOrderItems' resultMap='BookOrderItemResultMap'>    select * from book_order_item  </select>  <select id='selectBookOrderItemBySql' parameterType='java.lang.String' resultMap='BookOrderItemResultMap'>    ${value}  </select>  <delete id='deleteBookOrderItemBySql' parameterType='java.lang.String'>    ${value}  </delete>  <update id='updateBookOrderItemBySql' parameterType='java.lang.String'>    ${value}  </update>  <select id='selectBookOrderItemByCondition' parameterType='java.lang.String' resultMap='BookOrderItemResultMap'>    select * from book_order_item where ${value}  </select>  <select id='selectCountByCondition' parameterType='java.lang.String' resultType='java.lang.Integer'>    select count(*) from book_order_item where ${value}  </select>  <select id='selectIntBySql' parameterType='java.lang.String' resultType='java.lang.Integer'>    ${value}  </select>  <select id='selectStringBySql' parameterType='java.lang.String' resultType='java.lang.String'>    ${value}  </select></mapper>