<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'http://mybatis.org/dtd/mybatis-3-mapper.dtd'><mapper namespace='SysBuildProject'>  <resultMap type='strosoft.sys.data.SysBuildProject' id='SysBuildProjectResultMap' >    <result column='id' property='id' />    <result column='name' property='name' />    <result column='configuration' property='configuration' />    <result column='create_time' property='createTime' />  </resultMap>  <insert id='insertSysBuildProject' parameterType='strosoft.sys.data.SysBuildProject' keyProperty='id' useGeneratedKeys='true'>    insert into sys_build_project    (id,name,configuration,create_time)    values    (#{id},#{name},#{configuration},now())  </insert>  <select id='selectSysBuildProject' parameterType='java.lang.Integer' resultMap='SysBuildProjectResultMap'>    select * from sys_build_project where id=#{id}  </select>  <update id='updateSysBuildProject' parameterType='strosoft.sys.data.SysBuildProject'>    update sys_build_project set id=#{id},name=#{name},configuration=#{configuration},create_time=#{createTime}    where id=#{id}  </update>  <delete id='deleteSysBuildProject' parameterType='java.lang.Integer'>    delete from sys_build_project where id=#{id}  </delete>  <insert id='insertSysBuildProjects' parameterType='java.util.List'>    insert into sys_build_project    (id,name,configuration,create_time)    values   <foreach collection='list' item='item' index='index' separator=','>    (#{item.id},#{item.name},#{item.configuration},now())   </foreach>  </insert>  <select id='selectSysBuildProjects' resultMap='SysBuildProjectResultMap'>    select * from sys_build_project  </select>  <select id='selectSysBuildProjectBySql' parameterType='java.lang.String' resultMap='SysBuildProjectResultMap'>    ${value}  </select>  <delete id='deleteSysBuildProjectBySql' parameterType='java.lang.String'>    ${value}  </delete>  <update id='updateSysBuildProjectBySql' parameterType='java.lang.String'>    ${value}  </update>  <select id='selectSysBuildProjectByCondition' parameterType='java.lang.String' resultMap='SysBuildProjectResultMap'>    select * from sys_build_project where ${value}  </select>  <select id='selectCountByCondition' parameterType='java.lang.String' resultType='java.lang.Integer'>    select count(*) from sys_build_project where ${value}  </select>  <select id='selectIntBySql' parameterType='java.lang.String' resultType='java.lang.Integer'>    ${value}  </select>  <select id='selectStringBySql' parameterType='java.lang.String' resultType='java.lang.String'>    ${value}  </select></mapper>