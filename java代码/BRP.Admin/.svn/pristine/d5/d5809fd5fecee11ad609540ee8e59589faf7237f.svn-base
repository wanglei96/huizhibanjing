<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'http://mybatis.org/dtd/mybatis-3-mapper.dtd'><mapper namespace='Member'>  <resultMap type='BRP.data.Member' id='MemberResultMap' >    <result column='id' property='id' />    <result column='company_id' property='companyId' />    <result column='member_no' property='memberNo' />    <result column='name' property='name' />    <result column='nickname' property='nickname' />    <result column='mobile_phone' property='mobilePhone' />    <result column='gender' property='gender' />    <result column='birthday' property='birthday' />    <result column='school' property='school' />    <result column='grade_id' property='gradeId' />    <result column='class_id' property='classId' />    <result column='wxa_open_id' property='wxaOpenId' />    <result column='wx_open_id' property='wxOpenId' />    <result column='score' property='score' />    <result column='entrance_guard' property='entranceGuard' />    <result column='deliver_area_id' property='deliverAreaId' />    <result column='deliver_place_id' property='deliverPlaceId' />    <result column='deliver_line_id' property='deliverLineId' />    <result column='deliverer_id' property='delivererId' />    <result column='distance_code' property='distanceCode' />    <result column='address' property='address' />    <result column='longitude' property='longitude' />    <result column='latitude' property='latitude' />    <result column='bookbox_amount' property='bookboxAmount' />    <result column='pay_time' property='payTime' />    <result column='payment_method_code' property='paymentMethodCode' />    <result column='bookbox_cancel_time' property='bookboxCancelTime' />    <result column='bookbox_remark' property='bookboxRemark' />    <result column='member_bookbox_status_code' property='memberBookboxStatusCode' />    <result column='is_activated' property='isActivated' />    <result column='enabled' property='enabled' />    <result column='max_borrow_quantity' property='maxBorrowQuantity' />    <result column='bookbox_no' property='bookboxNo' />    <result column='is_remote' property='isRemote' />    <result column='head_image_file_id' property='headImageFileId' />    <result column='night_story_expire_date' property='nightStoryExpireDate' />    <result column='referrer' property='referrer' />    <result column='book_pocket_quantity' property='bookPocketQuantity' />    <result column='is_sign' property='isSign' />    <result column='create_time' property='createTime' />    <result column='update_time' property='updateTime' />    <result column='union_id' property='unionId' />  </resultMap>  <insert id='insertMember' parameterType='BRP.data.Member' keyProperty='id' useGeneratedKeys='true'>    insert into member    (id,company_id,member_no,name,nickname,mobile_phone,gender,birthday,school,grade_id,class_id,wxa_open_id,wx_open_id,score,entrance_guard,deliver_area_id,deliver_place_id,deliver_line_id,deliverer_id,distance_code,address,longitude,latitude,bookbox_amount,pay_time,payment_method_code,bookbox_cancel_time,bookbox_remark,member_bookbox_status_code,is_activated,enabled,max_borrow_quantity,bookbox_no,is_remote,head_image_file_id,night_story_expire_date,referrer,book_pocket_quantity,is_sign,create_time,update_time,union_id)    values    (#{id},#{companyId},#{memberNo},#{name},#{nickname},#{mobilePhone},#{gender},#{birthday},#{school},#{gradeId},#{classId},#{wxaOpenId},#{wxOpenId},#{score},#{entranceGuard},#{deliverAreaId},#{deliverPlaceId},#{deliverLineId},#{delivererId},#{distanceCode},#{address},#{longitude},#{latitude},#{bookboxAmount},#{payTime},#{paymentMethodCode},#{bookboxCancelTime},#{bookboxRemark},#{memberBookboxStatusCode},#{isActivated},#{enabled},#{maxBorrowQuantity},#{bookboxNo},#{isRemote},#{headImageFileId},#{nightStoryExpireDate},#{referrer},#{bookPocketQuantity},#{isSign},now(),now(),#{unionId})  </insert>  <select id='selectMember' parameterType='java.lang.Integer' resultMap='MemberResultMap'>    select * from member where id=#{id}  </select>  <update id='updateMember' parameterType='BRP.data.Member'>    update member set id=#{id},company_id=#{companyId},member_no=#{memberNo},name=#{name},nickname=#{nickname},mobile_phone=#{mobilePhone},gender=#{gender},birthday=#{birthday},school=#{school},grade_id=#{gradeId},class_id=#{classId},wxa_open_id=#{wxaOpenId},wx_open_id=#{wxOpenId},score=#{score},entrance_guard=#{entranceGuard},deliver_area_id=#{deliverAreaId},deliver_place_id=#{deliverPlaceId},deliver_line_id=#{deliverLineId},deliverer_id=#{delivererId},distance_code=#{distanceCode},address=#{address},longitude=#{longitude},latitude=#{latitude},bookbox_amount=#{bookboxAmount},pay_time=#{payTime},payment_method_code=#{paymentMethodCode},bookbox_cancel_time=#{bookboxCancelTime},bookbox_remark=#{bookboxRemark},member_bookbox_status_code=#{memberBookboxStatusCode},is_activated=#{isActivated},enabled=#{enabled},max_borrow_quantity=#{maxBorrowQuantity},bookbox_no=#{bookboxNo},is_remote=#{isRemote},head_image_file_id=#{headImageFileId},night_story_expire_date=#{nightStoryExpireDate},referrer=#{referrer},book_pocket_quantity=#{bookPocketQuantity},is_sign=#{isSign},create_time=#{createTime},update_time=#{updateTime},union_id=#{unionId}    where id=#{id}  </update>  <delete id='deleteMember' parameterType='java.lang.Integer'>    delete from member where id=#{id}  </delete>  <select id='selectMemberByClassId' parameterType='java.lang.Integer' resultMap='MemberResultMap'>    select * from member where class_id=#{classId}  </select>  <select id='selectMemberByCompanyId' parameterType='java.lang.Integer' resultMap='MemberResultMap'>    select * from member where company_id=#{companyId}  </select>  <select id='selectMemberByDelivererId' parameterType='java.lang.Integer' resultMap='MemberResultMap'>    select * from member where deliverer_id=#{delivererId}  </select>  <select id='selectMemberByDeliverAreaId' parameterType='java.lang.Integer' resultMap='MemberResultMap'>    select * from member where deliver_area_id=#{deliverAreaId}  </select>  <select id='selectMemberByDeliverLineId' parameterType='java.lang.Integer' resultMap='MemberResultMap'>    select * from member where deliver_line_id=#{deliverLineId}  </select>  <select id='selectMemberByDeliverPlaceId' parameterType='java.lang.Integer' resultMap='MemberResultMap'>    select * from member where deliver_place_id=#{deliverPlaceId}  </select>  <select id='selectMemberByDistanceCode' parameterType='java.lang.String' resultMap='MemberResultMap'>    select * from member where distance_code=#{distanceCode}  </select>  <select id='selectMemberByGradeId' parameterType='java.lang.Integer' resultMap='MemberResultMap'>    select * from member where grade_id=#{gradeId}  </select>  <select id='selectMemberByMemberBookboxStatusCode' parameterType='java.lang.String' resultMap='MemberResultMap'>    select * from member where member_bookbox_status_code=#{memberBookboxStatusCode}  </select>  <select id='selectMemberByPaymentMethodCode' parameterType='java.lang.String' resultMap='MemberResultMap'>    select * from member where payment_method_code=#{paymentMethodCode}  </select>  <delete id='deleteMemberByClassId' parameterType='java.lang.Integer'>    delete from member where class_id=#{classId}  </delete>  <delete id='deleteMemberByCompanyId' parameterType='java.lang.Integer'>    delete from member where company_id=#{companyId}  </delete>  <delete id='deleteMemberByDelivererId' parameterType='java.lang.Integer'>    delete from member where deliverer_id=#{delivererId}  </delete>  <delete id='deleteMemberByDeliverAreaId' parameterType='java.lang.Integer'>    delete from member where deliver_area_id=#{deliverAreaId}  </delete>  <delete id='deleteMemberByDeliverLineId' parameterType='java.lang.Integer'>    delete from member where deliver_line_id=#{deliverLineId}  </delete>  <delete id='deleteMemberByDeliverPlaceId' parameterType='java.lang.Integer'>    delete from member where deliver_place_id=#{deliverPlaceId}  </delete>  <delete id='deleteMemberByDistanceCode' parameterType='java.lang.String'>    delete from member where distance_code=#{distanceCode}  </delete>  <delete id='deleteMemberByGradeId' parameterType='java.lang.Integer'>    delete from member where grade_id=#{gradeId}  </delete>  <delete id='deleteMemberByMemberBookboxStatusCode' parameterType='java.lang.String'>    delete from member where member_bookbox_status_code=#{memberBookboxStatusCode}  </delete>  <delete id='deleteMemberByPaymentMethodCode' parameterType='java.lang.String'>    delete from member where payment_method_code=#{paymentMethodCode}  </delete>  <insert id='insertMembers' parameterType='java.util.List'>    insert into member    (id,company_id,member_no,name,nickname,mobile_phone,gender,birthday,school,grade_id,class_id,wxa_open_id,wx_open_id,score,entrance_guard,deliver_area_id,deliver_place_id,deliver_line_id,deliverer_id,distance_code,address,longitude,latitude,bookbox_amount,pay_time,payment_method_code,bookbox_cancel_time,bookbox_remark,member_bookbox_status_code,is_activated,enabled,max_borrow_quantity,bookbox_no,is_remote,head_image_file_id,night_story_expire_date,referrer,book_pocket_quantity,is_sign,create_time,update_time,union_id)    values   <foreach collection='list' item='item' index='index' separator=','>    (#{item.id},#{item.companyId},#{item.memberNo},#{item.name},#{item.nickname},#{item.mobilePhone},#{item.gender},#{item.birthday},#{item.school},#{item.gradeId},#{item.classId},#{item.wxaOpenId},#{item.wxOpenId},#{item.score},#{item.entranceGuard},#{item.deliverAreaId},#{item.deliverPlaceId},#{item.deliverLineId},#{item.delivererId},#{item.distanceCode},#{item.address},#{item.longitude},#{item.latitude},#{item.bookboxAmount},#{item.payTime},#{item.paymentMethodCode},#{item.bookboxCancelTime},#{item.bookboxRemark},#{item.memberBookboxStatusCode},#{item.isActivated},#{item.enabled},#{item.maxBorrowQuantity},#{item.bookboxNo},#{item.isRemote},#{item.headImageFileId},#{item.nightStoryExpireDate},#{item.referrer},#{item.bookPocketQuantity},#{item.isSign},now(),#{item.updateTime},#{item.unionId})   </foreach>  </insert>  <select id='selectMembers' resultMap='MemberResultMap'>    select * from member  </select>  <select id='selectMemberBySql' parameterType='java.lang.String' resultMap='MemberResultMap'>    ${value}  </select>  <delete id='deleteMemberBySql' parameterType='java.lang.String'>    ${value}  </delete>  <update id='updateMemberBySql' parameterType='java.lang.String'>    ${value}  </update>  <select id='selectMemberByCondition' parameterType='java.lang.String' resultMap='MemberResultMap'>    select * from member where ${value}  </select>  <select id='selectCountByCondition' parameterType='java.lang.String' resultType='java.lang.Integer'>    select count(*) from member where ${value}  </select>  <select id='selectIntBySql' parameterType='java.lang.String' resultType='java.lang.Integer'>    ${value}  </select>  <select id='selectStringBySql' parameterType='java.lang.String' resultType='java.lang.String'>    ${value}  </select></mapper>