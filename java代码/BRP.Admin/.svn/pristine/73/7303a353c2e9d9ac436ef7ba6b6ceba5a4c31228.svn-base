<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'http://mybatis.org/dtd/mybatis-3-mapper.dtd'><mapper namespace='MemberCard'>  <resultMap type='BRP.data.MemberCard' id='MemberCardResultMap' >    <result column='id' property='id' />    <result column='company_id' property='companyId' />    <result column='member_card_batch_id' property='memberCardBatchId' />    <result column='no' property='no' />    <result column='card_no' property='cardNo' />    <result column='member_id' property='memberId' />    <result column='referrer_id' property='referrerId' />    <result column='referrer_remark' property='referrerRemark' />    <result column='member_card_type_id' property='memberCardTypeId' />    <result column='payment_method_code' property='paymentMethodCode' />    <result column='membership_amount' property='membershipAmount' />    <result column='employee_id' property='employeeId' />    <result column='effective_date' property='effectiveDate' />    <result column='expire_date' property='expireDate' />    <result column='is_special' property='isSpecial' />    <result column='remark' property='remark' />    <result column='disabled' property='disabled' />    <result column='max_borrowable_quantity' property='maxBorrowableQuantity' />    <result column='borrowable_quantity' property='borrowableQuantity' />    <result column='is_unlimited' property='isUnlimited' />    <result column='is_online_reading' property='isOnlineReading' />    <result column='max_borrow_quantity' property='maxBorrowQuantity' />    <result column='stoppable_card_quantity' property='stoppableCardQuantity' />    <result column='member_card_status_code' property='memberCardStatusCode' />    <result column='is_stop_card' property='isStopCard' />    <result column='lock_date' property='lockDate' />    <result column='employee_time' property='employeeTime' />    <result column='create_time' property='createTime' />    <result column='update_time' property='updateTime' />  </resultMap>  <insert id='insertMemberCard' parameterType='BRP.data.MemberCard' keyProperty='id' useGeneratedKeys='true'>    insert into member_card    (id,company_id,member_card_batch_id,no,card_no,member_id,referrer_id,referrer_remark,member_card_type_id,payment_method_code,membership_amount,employee_id,effective_date,expire_date,is_special,remark,disabled,max_borrowable_quantity,borrowable_quantity,is_unlimited,is_online_reading,max_borrow_quantity,stoppable_card_quantity,member_card_status_code,is_stop_card,lock_date,employee_time,create_time,update_time)    values    (#{id},#{companyId},#{memberCardBatchId},#{no},#{cardNo},#{memberId},#{referrerId},#{referrerRemark},#{memberCardTypeId},#{paymentMethodCode},#{membershipAmount},#{employeeId},#{effectiveDate},#{expireDate},#{isSpecial},#{remark},#{disabled},#{maxBorrowableQuantity},#{borrowableQuantity},#{isUnlimited},#{isOnlineReading},#{maxBorrowQuantity},#{stoppableCardQuantity},#{memberCardStatusCode},#{isStopCard},#{lockDate},#{employeeTime},now(),now())  </insert>  <select id='selectMemberCard' parameterType='java.lang.Integer' resultMap='MemberCardResultMap'>    select * from member_card where id=#{id}  </select>  <update id='updateMemberCard' parameterType='BRP.data.MemberCard'>    update member_card set id=#{id},company_id=#{companyId},member_card_batch_id=#{memberCardBatchId},no=#{no},card_no=#{cardNo},member_id=#{memberId},referrer_id=#{referrerId},referrer_remark=#{referrerRemark},member_card_type_id=#{memberCardTypeId},payment_method_code=#{paymentMethodCode},membership_amount=#{membershipAmount},employee_id=#{employeeId},effective_date=#{effectiveDate},expire_date=#{expireDate},is_special=#{isSpecial},remark=#{remark},disabled=#{disabled},max_borrowable_quantity=#{maxBorrowableQuantity},borrowable_quantity=#{borrowableQuantity},is_unlimited=#{isUnlimited},is_online_reading=#{isOnlineReading},max_borrow_quantity=#{maxBorrowQuantity},stoppable_card_quantity=#{stoppableCardQuantity},member_card_status_code=#{memberCardStatusCode},is_stop_card=#{isStopCard},lock_date=#{lockDate},employee_time=#{employeeTime},create_time=#{createTime},update_time=#{updateTime}    where id=#{id}  </update>  <delete id='deleteMemberCard' parameterType='java.lang.Integer'>    delete from member_card where id=#{id}  </delete>  <select id='selectMemberCardByCompanyId' parameterType='java.lang.Integer' resultMap='MemberCardResultMap'>    select * from member_card where company_id=#{companyId}  </select>  <select id='selectMemberCardByEmployeeId' parameterType='java.lang.Integer' resultMap='MemberCardResultMap'>    select * from member_card where employee_id=#{employeeId}  </select>  <select id='selectMemberCardByMemberId' parameterType='java.lang.Integer' resultMap='MemberCardResultMap'>    select * from member_card where member_id=#{memberId}  </select>  <select id='selectMemberCardByMemberCardBatchId' parameterType='java.lang.Integer' resultMap='MemberCardResultMap'>    select * from member_card where member_card_batch_id=#{memberCardBatchId}  </select>  <select id='selectMemberCardByMemberCardStatusCode' parameterType='java.lang.String' resultMap='MemberCardResultMap'>    select * from member_card where member_card_status_code=#{memberCardStatusCode}  </select>  <select id='selectMemberCardByMemberCardTypeId' parameterType='java.lang.Integer' resultMap='MemberCardResultMap'>    select * from member_card where member_card_type_id=#{memberCardTypeId}  </select>  <select id='selectMemberCardByPaymentMethodCode' parameterType='java.lang.String' resultMap='MemberCardResultMap'>    select * from member_card where payment_method_code=#{paymentMethodCode}  </select>  <select id='selectMemberCardByReferrerId' parameterType='java.lang.Integer' resultMap='MemberCardResultMap'>    select * from member_card where referrer_id=#{referrerId}  </select>  <delete id='deleteMemberCardByCompanyId' parameterType='java.lang.Integer'>    delete from member_card where company_id=#{companyId}  </delete>  <delete id='deleteMemberCardByEmployeeId' parameterType='java.lang.Integer'>    delete from member_card where employee_id=#{employeeId}  </delete>  <delete id='deleteMemberCardByMemberId' parameterType='java.lang.Integer'>    delete from member_card where member_id=#{memberId}  </delete>  <delete id='deleteMemberCardByMemberCardBatchId' parameterType='java.lang.Integer'>    delete from member_card where member_card_batch_id=#{memberCardBatchId}  </delete>  <delete id='deleteMemberCardByMemberCardStatusCode' parameterType='java.lang.String'>    delete from member_card where member_card_status_code=#{memberCardStatusCode}  </delete>  <delete id='deleteMemberCardByMemberCardTypeId' parameterType='java.lang.Integer'>    delete from member_card where member_card_type_id=#{memberCardTypeId}  </delete>  <delete id='deleteMemberCardByPaymentMethodCode' parameterType='java.lang.String'>    delete from member_card where payment_method_code=#{paymentMethodCode}  </delete>  <delete id='deleteMemberCardByReferrerId' parameterType='java.lang.Integer'>    delete from member_card where referrer_id=#{referrerId}  </delete>  <insert id='insertMemberCards' parameterType='java.util.List'>    insert into member_card    (id,company_id,member_card_batch_id,no,card_no,member_id,referrer_id,referrer_remark,member_card_type_id,payment_method_code,membership_amount,employee_id,effective_date,expire_date,is_special,remark,disabled,max_borrowable_quantity,borrowable_quantity,is_unlimited,is_online_reading,max_borrow_quantity,stoppable_card_quantity,member_card_status_code,is_stop_card,lock_date,employee_time,create_time,update_time)    values   <foreach collection='list' item='item' index='index' separator=','>    (#{item.id},#{item.companyId},#{item.memberCardBatchId},#{item.no},#{item.cardNo},#{item.memberId},#{item.referrerId},#{item.referrerRemark},#{item.memberCardTypeId},#{item.paymentMethodCode},#{item.membershipAmount},#{item.employeeId},#{item.effectiveDate},#{item.expireDate},#{item.isSpecial},#{item.remark},#{item.disabled},#{item.maxBorrowableQuantity},#{item.borrowableQuantity},#{item.isUnlimited},#{item.isOnlineReading},#{item.maxBorrowQuantity},#{item.stoppableCardQuantity},#{item.memberCardStatusCode},#{item.isStopCard},#{item.lockDate},#{item.employeeTime},now(),#{item.updateTime})   </foreach>  </insert>  <select id='selectMemberCards' resultMap='MemberCardResultMap'>    select * from member_card  </select>  <select id='selectMemberCardBySql' parameterType='java.lang.String' resultMap='MemberCardResultMap'>    ${value}  </select>  <delete id='deleteMemberCardBySql' parameterType='java.lang.String'>    ${value}  </delete>  <update id='updateMemberCardBySql' parameterType='java.lang.String'>    ${value}  </update>  <select id='selectMemberCardByCondition' parameterType='java.lang.String' resultMap='MemberCardResultMap'>    select * from member_card where ${value}  </select>  <select id='selectCountByCondition' parameterType='java.lang.String' resultType='java.lang.Integer'>    select count(*) from member_card where ${value}  </select>  <select id='selectIntBySql' parameterType='java.lang.String' resultType='java.lang.Integer'>    ${value}  </select>  <select id='selectStringBySql' parameterType='java.lang.String' resultType='java.lang.String'>    ${value}  </select></mapper>