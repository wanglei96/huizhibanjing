<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'http://mybatis.org/dtd/mybatis-3-mapper.dtd'><mapper namespace='BookDamage'>  <resultMap type='BRP.data.BookDamage' id='BookDamageResultMap' >    <result column='id' property='id' />    <result column='book_id' property='bookId' />    <result column='member_id' property='memberId' />    <result column='amount' property='amount' />    <result column='book_damage_type_code' property='bookDamageTypeCode' />    <result column='damage_time' property='damageTime' />    <result column='is_remind' property='isRemind' />    <result column='company_id' property='companyId' />    <result column='company_user_id' property='companyUserId' />    <result column='payment_time' property='paymentTime' />    <result column='payment_method_code' property='paymentMethodCode' />    <result column='reason' property='reason' />    <result column='remark' property='remark' />    <result column='is_compensation' property='isCompensation' />    <result column='is_off' property='isOff' />    <result column='create_time' property='createTime' />    <result column='update_time' property='updateTime' />  </resultMap>  <insert id='insertBookDamage' parameterType='BRP.data.BookDamage' keyProperty='id' useGeneratedKeys='true'>    insert into book_damage    (id,book_id,member_id,amount,book_damage_type_code,damage_time,is_remind,company_id,company_user_id,payment_time,payment_method_code,reason,remark,is_compensation,is_off,create_time,update_time)    values    (#{id},#{bookId},#{memberId},#{amount},#{bookDamageTypeCode},#{damageTime},#{isRemind},#{companyId},#{companyUserId},#{paymentTime},#{paymentMethodCode},#{reason},#{remark},#{isCompensation},#{isOff},now(),now())  </insert>  <select id='selectBookDamage' parameterType='java.lang.Integer' resultMap='BookDamageResultMap'>    select * from book_damage where id=#{id}  </select>  <update id='updateBookDamage' parameterType='BRP.data.BookDamage'>    update book_damage set id=#{id},book_id=#{bookId},member_id=#{memberId},amount=#{amount},book_damage_type_code=#{bookDamageTypeCode},damage_time=#{damageTime},is_remind=#{isRemind},company_id=#{companyId},company_user_id=#{companyUserId},payment_time=#{paymentTime},payment_method_code=#{paymentMethodCode},reason=#{reason},remark=#{remark},is_compensation=#{isCompensation},is_off=#{isOff},create_time=#{createTime},update_time=#{updateTime}    where id=#{id}  </update>  <delete id='deleteBookDamage' parameterType='java.lang.Integer'>    delete from book_damage where id=#{id}  </delete>  <select id='selectBookDamageByBookId' parameterType='java.lang.Integer' resultMap='BookDamageResultMap'>    select * from book_damage where book_id=#{bookId}  </select>  <select id='selectBookDamageByCompanyId' parameterType='java.lang.Integer' resultMap='BookDamageResultMap'>    select * from book_damage where company_id=#{companyId}  </select>  <select id='selectBookDamageByPaymentMethodCode' parameterType='java.lang.String' resultMap='BookDamageResultMap'>    select * from book_damage where payment_method_code=#{paymentMethodCode}  </select>  <select id='selectBookDamageByCompanyUserId' parameterType='java.lang.Integer' resultMap='BookDamageResultMap'>    select * from book_damage where company_user_id=#{companyUserId}  </select>  <select id='selectBookDamageByBookDamageTypeCode' parameterType='java.lang.String' resultMap='BookDamageResultMap'>    select * from book_damage where book_damage_type_code=#{bookDamageTypeCode}  </select>  <select id='selectBookDamageByMemberId' parameterType='java.lang.Integer' resultMap='BookDamageResultMap'>    select * from book_damage where member_id=#{memberId}  </select>  <delete id='deleteBookDamageByBookId' parameterType='java.lang.Integer'>    delete from book_damage where book_id=#{bookId}  </delete>  <delete id='deleteBookDamageByCompanyId' parameterType='java.lang.Integer'>    delete from book_damage where company_id=#{companyId}  </delete>  <delete id='deleteBookDamageByPaymentMethodCode' parameterType='java.lang.String'>    delete from book_damage where payment_method_code=#{paymentMethodCode}  </delete>  <delete id='deleteBookDamageByCompanyUserId' parameterType='java.lang.Integer'>    delete from book_damage where company_user_id=#{companyUserId}  </delete>  <delete id='deleteBookDamageByBookDamageTypeCode' parameterType='java.lang.String'>    delete from book_damage where book_damage_type_code=#{bookDamageTypeCode}  </delete>  <delete id='deleteBookDamageByMemberId' parameterType='java.lang.Integer'>    delete from book_damage where member_id=#{memberId}  </delete>  <insert id='insertBookDamages' parameterType='java.util.List'>    insert into book_damage    (id,book_id,member_id,amount,book_damage_type_code,damage_time,is_remind,company_id,company_user_id,payment_time,payment_method_code,reason,remark,is_compensation,is_off,create_time,update_time)    values   <foreach collection='list' item='item' index='index' separator=','>    (#{item.id},#{item.bookId},#{item.memberId},#{item.amount},#{item.bookDamageTypeCode},#{item.damageTime},#{item.isRemind},#{item.companyId},#{item.companyUserId},#{item.paymentTime},#{item.paymentMethodCode},#{item.reason},#{item.remark},#{item.isCompensation},#{item.isOff},now(),#{item.updateTime})   </foreach>  </insert>  <select id='selectBookDamages' resultMap='BookDamageResultMap'>    select * from book_damage  </select>  <select id='selectBookDamageBySql' parameterType='java.lang.String' resultMap='BookDamageResultMap'>    ${value}  </select>  <delete id='deleteBookDamageBySql' parameterType='java.lang.String'>    ${value}  </delete>  <update id='updateBookDamageBySql' parameterType='java.lang.String'>    ${value}  </update>  <select id='selectBookDamageByCondition' parameterType='java.lang.String' resultMap='BookDamageResultMap'>    select * from book_damage where ${value}  </select>  <select id='selectCountByCondition' parameterType='java.lang.String' resultType='java.lang.Integer'>    select count(*) from book_damage where ${value}  </select>  <select id='selectIntBySql' parameterType='java.lang.String' resultType='java.lang.Integer'>    ${value}  </select>  <select id='selectStringBySql' parameterType='java.lang.String' resultType='java.lang.String'>    ${value}  </select></mapper>