<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'http://mybatis.org/dtd/mybatis-3-mapper.dtd'><mapper namespace='BookSku'>  <resultMap type='BRP.data.BookSku' id='BookSkuResultMap' >    <result column='id' property='id' />    <result column='book_name' property='bookName' />    <result column='image_file_id' property='imageFileId' />    <result column='author' property='author' />    <result column='press' property='press' />    <result column='price' property='price' />    <result column='ISBN' property='ISBN' />    <result column='language_code' property='languageCode' />    <result column='binding_type_code' property='bindingTypeCode' />    <result column='dangdang_link' property='dangdangLink' />    <result column='introduction' property='introduction' />    <result column='remark' property='remark' />    <result column='company_id' property='companyId' />    <result column='approver_id' property='approverId' />    <result column='approve_time' property='approveTime' />    <result column='approve_comment' property='approveComment' />    <result column='approve_status_code' property='approveStatusCode' />    <result column='is_online' property='isOnline' />    <result column='book_series_id' property='bookSeriesId' />    <result column='is_out' property='isOut' />    <result column='insufficient_inventory_count' property='insufficientInventoryCount' />    <result column='platform_book_sku_id' property='platformBookSkuId' />    <result column='create_time' property='createTime' />    <result column='update_time' property='updateTime' />  </resultMap>  <insert id='insertBookSku' parameterType='BRP.data.BookSku' keyProperty='id' useGeneratedKeys='true'>    insert into book_sku    (id,book_name,image_file_id,author,press,price,ISBN,language_code,binding_type_code,dangdang_link,introduction,remark,company_id,approver_id,approve_time,approve_comment,approve_status_code,is_online,book_series_id,is_out,insufficient_inventory_count,platform_book_sku_id,create_time,update_time)    values    (#{id},#{bookName},#{imageFileId},#{author},#{press},#{price},#{ISBN},#{languageCode},#{bindingTypeCode},#{dangdangLink},#{introduction},#{remark},#{companyId},#{approverId},#{approveTime},#{approveComment},#{approveStatusCode},#{isOnline},#{bookSeriesId},#{isOut},#{insufficientInventoryCount},#{platformBookSkuId},now(),now())  </insert>  <select id='selectBookSku' parameterType='java.lang.Integer' resultMap='BookSkuResultMap'>    select * from book_sku where id=#{id}  </select>  <update id='updateBookSku' parameterType='BRP.data.BookSku'>    update book_sku set id=#{id},book_name=#{bookName},image_file_id=#{imageFileId},author=#{author},press=#{press},price=#{price},ISBN=#{ISBN},language_code=#{languageCode},binding_type_code=#{bindingTypeCode},dangdang_link=#{dangdangLink},introduction=#{introduction},remark=#{remark},company_id=#{companyId},approver_id=#{approverId},approve_time=#{approveTime},approve_comment=#{approveComment},approve_status_code=#{approveStatusCode},is_online=#{isOnline},book_series_id=#{bookSeriesId},is_out=#{isOut},insufficient_inventory_count=#{insufficientInventoryCount},platform_book_sku_id=#{platformBookSkuId},create_time=#{createTime},update_time=#{updateTime}    where id=#{id}  </update>  <delete id='deleteBookSku' parameterType='java.lang.Integer'>    delete from book_sku where id=#{id}  </delete>  <select id='selectBookSkuByCompanyId' parameterType='java.lang.Integer' resultMap='BookSkuResultMap'>    select * from book_sku where company_id=#{companyId}  </select>  <select id='selectBookSkuByApproveStatusCode' parameterType='java.lang.String' resultMap='BookSkuResultMap'>    select * from book_sku where approve_status_code=#{approveStatusCode}  </select>  <select id='selectBookSkuByApproverId' parameterType='java.lang.Integer' resultMap='BookSkuResultMap'>    select * from book_sku where approver_id=#{approverId}  </select>  <select id='selectBookSkuByBindingTypeCode' parameterType='java.lang.String' resultMap='BookSkuResultMap'>    select * from book_sku where binding_type_code=#{bindingTypeCode}  </select>  <select id='selectBookSkuByBookSeriesId' parameterType='java.lang.Integer' resultMap='BookSkuResultMap'>    select * from book_sku where book_series_id=#{bookSeriesId}  </select>  <select id='selectBookSkuByImageFileId' parameterType='java.lang.Integer' resultMap='BookSkuResultMap'>    select * from book_sku where image_file_id=#{imageFileId}  </select>  <select id='selectBookSkuByLanguageCode' parameterType='java.lang.String' resultMap='BookSkuResultMap'>    select * from book_sku where language_code=#{languageCode}  </select>  <delete id='deleteBookSkuByCompanyId' parameterType='java.lang.Integer'>    delete from book_sku where company_id=#{companyId}  </delete>  <delete id='deleteBookSkuByApproveStatusCode' parameterType='java.lang.String'>    delete from book_sku where approve_status_code=#{approveStatusCode}  </delete>  <delete id='deleteBookSkuByApproverId' parameterType='java.lang.Integer'>    delete from book_sku where approver_id=#{approverId}  </delete>  <delete id='deleteBookSkuByBindingTypeCode' parameterType='java.lang.String'>    delete from book_sku where binding_type_code=#{bindingTypeCode}  </delete>  <delete id='deleteBookSkuByBookSeriesId' parameterType='java.lang.Integer'>    delete from book_sku where book_series_id=#{bookSeriesId}  </delete>  <delete id='deleteBookSkuByImageFileId' parameterType='java.lang.Integer'>    delete from book_sku where image_file_id=#{imageFileId}  </delete>  <delete id='deleteBookSkuByLanguageCode' parameterType='java.lang.String'>    delete from book_sku where language_code=#{languageCode}  </delete>  <insert id='insertBookSkus' parameterType='java.util.List'>    insert into book_sku    (id,book_name,image_file_id,author,press,price,ISBN,language_code,binding_type_code,dangdang_link,introduction,remark,company_id,approver_id,approve_time,approve_comment,approve_status_code,is_online,book_series_id,is_out,insufficient_inventory_count,platform_book_sku_id,create_time,update_time)    values   <foreach collection='list' item='item' index='index' separator=','>    (#{item.id},#{item.bookName},#{item.imageFileId},#{item.author},#{item.press},#{item.price},#{item.ISBN},#{item.languageCode},#{item.bindingTypeCode},#{item.dangdangLink},#{item.introduction},#{item.remark},#{item.companyId},#{item.approverId},#{item.approveTime},#{item.approveComment},#{item.approveStatusCode},#{item.isOnline},#{item.bookSeriesId},#{item.isOut},#{item.insufficientInventoryCount},#{item.platformBookSkuId},now(),#{item.updateTime})   </foreach>  </insert>  <select id='selectBookSkus' resultMap='BookSkuResultMap'>    select * from book_sku  </select>  <select id='selectBookSkuBySql' parameterType='java.lang.String' resultMap='BookSkuResultMap'>    ${value}  </select>  <delete id='deleteBookSkuBySql' parameterType='java.lang.String'>    ${value}  </delete>  <update id='updateBookSkuBySql' parameterType='java.lang.String'>    ${value}  </update>  <select id='selectBookSkuByCondition' parameterType='java.lang.String' resultMap='BookSkuResultMap'>    select * from book_sku where ${value}  </select>  <select id='selectCountByCondition' parameterType='java.lang.String' resultType='java.lang.Integer'>    select count(*) from book_sku where ${value}  </select>  <select id='selectIntBySql' parameterType='java.lang.String' resultType='java.lang.Integer'>    ${value}  </select>  <select id='selectStringBySql' parameterType='java.lang.String' resultType='java.lang.String'>    ${value}  </select></mapper>