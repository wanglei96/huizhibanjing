<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'http://mybatis.org/dtd/mybatis-3-mapper.dtd'><mapper namespace='Book'>  <resultMap type='BRP.data.Book' id='BookResultMap' >    <result column='id' property='id' />    <result column='book_sku_id' property='bookSkuId' />    <result column='sn' property='sn' />    <result column='borrow_status_code' property='borrowStatusCode' />    <result column='book_status_code' property='bookStatusCode' />    <result column='is_available' property='isAvailable' />    <result column='company_id' property='companyId' />    <result column='member_id' property='memberId' />    <result column='bookcase_id' property='bookcaseId' />    <result column='remark' property='remark' />    <result column='offline_time' property='offlineTime' />    <result column='offline_reason' property='offlineReason' />    <result column='offline_approver_id' property='offlineApproverId' />    <result column='is_damaged' property='isDamaged' />    <result column='create_time' property='createTime' />    <result column='update_time' property='updateTime' />  </resultMap>  <insert id='insertBook' parameterType='BRP.data.Book' keyProperty='id' useGeneratedKeys='true'>    insert into book    (id,book_sku_id,sn,borrow_status_code,book_status_code,is_available,company_id,member_id,bookcase_id,remark,offline_time,offline_reason,offline_approver_id,is_damaged,create_time,update_time)    values    (#{id},#{bookSkuId},#{sn},#{borrowStatusCode},#{bookStatusCode},#{isAvailable},#{companyId},#{memberId},#{bookcaseId},#{remark},#{offlineTime},#{offlineReason},#{offlineApproverId},#{isDamaged},now(),now())  </insert>  <select id='selectBook' parameterType='java.lang.Integer' resultMap='BookResultMap'>    select * from book where id=#{id}  </select>  <update id='updateBook' parameterType='BRP.data.Book'>    update book set id=#{id},book_sku_id=#{bookSkuId},sn=#{sn},borrow_status_code=#{borrowStatusCode},book_status_code=#{bookStatusCode},is_available=#{isAvailable},company_id=#{companyId},member_id=#{memberId},bookcase_id=#{bookcaseId},remark=#{remark},offline_time=#{offlineTime},offline_reason=#{offlineReason},offline_approver_id=#{offlineApproverId},is_damaged=#{isDamaged},create_time=#{createTime},update_time=#{updateTime}    where id=#{id}  </update>  <delete id='deleteBook' parameterType='java.lang.Integer'>    delete from book where id=#{id}  </delete>  <select id='selectBookByBookSkuId' parameterType='java.lang.Integer' resultMap='BookResultMap'>    select * from book where book_sku_id=#{bookSkuId}  </select>  <select id='selectBookByBookStatusCode' parameterType='java.lang.String' resultMap='BookResultMap'>    select * from book where book_status_code=#{bookStatusCode}  </select>  <select id='selectBookByBookcaseId' parameterType='java.lang.Integer' resultMap='BookResultMap'>    select * from book where bookcase_id=#{bookcaseId}  </select>  <select id='selectBookByBorrowStatusCode' parameterType='java.lang.String' resultMap='BookResultMap'>    select * from book where borrow_status_code=#{borrowStatusCode}  </select>  <select id='selectBookByCompanyId' parameterType='java.lang.Integer' resultMap='BookResultMap'>    select * from book where company_id=#{companyId}  </select>  <select id='selectBookByMemberId' parameterType='java.lang.Integer' resultMap='BookResultMap'>    select * from book where member_id=#{memberId}  </select>  <select id='selectBookByOfflineApproverId' parameterType='java.lang.Integer' resultMap='BookResultMap'>    select * from book where offline_approver_id=#{offlineApproverId}  </select>  <delete id='deleteBookByBookSkuId' parameterType='java.lang.Integer'>    delete from book where book_sku_id=#{bookSkuId}  </delete>  <delete id='deleteBookByBookStatusCode' parameterType='java.lang.String'>    delete from book where book_status_code=#{bookStatusCode}  </delete>  <delete id='deleteBookByBookcaseId' parameterType='java.lang.Integer'>    delete from book where bookcase_id=#{bookcaseId}  </delete>  <delete id='deleteBookByBorrowStatusCode' parameterType='java.lang.String'>    delete from book where borrow_status_code=#{borrowStatusCode}  </delete>  <delete id='deleteBookByCompanyId' parameterType='java.lang.Integer'>    delete from book where company_id=#{companyId}  </delete>  <delete id='deleteBookByMemberId' parameterType='java.lang.Integer'>    delete from book where member_id=#{memberId}  </delete>  <delete id='deleteBookByOfflineApproverId' parameterType='java.lang.Integer'>    delete from book where offline_approver_id=#{offlineApproverId}  </delete>  <insert id='insertBooks' parameterType='java.util.List'>    insert into book    (id,book_sku_id,sn,borrow_status_code,book_status_code,is_available,company_id,member_id,bookcase_id,remark,offline_time,offline_reason,offline_approver_id,is_damaged,create_time,update_time)    values   <foreach collection='list' item='item' index='index' separator=','>    (#{item.id},#{item.bookSkuId},#{item.sn},#{item.borrowStatusCode},#{item.bookStatusCode},#{item.isAvailable},#{item.companyId},#{item.memberId},#{item.bookcaseId},#{item.remark},#{item.offlineTime},#{item.offlineReason},#{item.offlineApproverId},#{item.isDamaged},now(),#{item.updateTime})   </foreach>  </insert>  <select id='selectBooks' resultMap='BookResultMap'>    select * from book  </select>  <select id='selectBookBySql' parameterType='java.lang.String' resultMap='BookResultMap'>    ${value}  </select>  <delete id='deleteBookBySql' parameterType='java.lang.String'>    ${value}  </delete>  <update id='updateBookBySql' parameterType='java.lang.String'>    ${value}  </update>  <select id='selectBookByCondition' parameterType='java.lang.String' resultMap='BookResultMap'>    select * from book where ${value}  </select>  <select id='selectCountByCondition' parameterType='java.lang.String' resultType='java.lang.Integer'>    select count(*) from book where ${value}  </select>  <select id='selectIntBySql' parameterType='java.lang.String' resultType='java.lang.Integer'>    ${value}  </select>  <select id='selectStringBySql' parameterType='java.lang.String' resultType='java.lang.String'>    ${value}  </select></mapper>