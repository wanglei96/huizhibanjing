<?xml version='1.0' encoding='UTF-8'?><!DOCTYPE mapper PUBLIC '-//mybatis.org//DTD Mapper 3.0//EN' 'http://mybatis.org/dtd/mybatis-3-mapper.dtd'><mapper namespace='BookOrder'>  <resultMap type='BRP.data.BookOrder' id='BookOrderResultMap' >    <result column='id' property='id' />    <result column='member_id' property='memberId' />    <result column='book_order_no' property='bookOrderNo' />    <result column='deliverer_id' property='delivererId' />    <result column='business_date' property='businessDate' />    <result column='book_order_borrow_status_code' property='bookOrderBorrowStatusCode' />    <result column='book_order_return_status_code' property='bookOrderReturnStatusCode' />    <result column='company_id' property='companyId' />    <result column='is_offline' property='isOffline' />    <result column='error_remark' property='errorRemark' />    <result column='display_order' property='displayOrder' />    <result column='deliver_time' property='deliverTime' />    <result column='rejected_reason' property='rejectedReason' />    <result column='delivered_time' property='deliveredTime' />    <result column='bookpicker_id' property='bookpickerId' />    <result column='deliver_area_number' property='deliverAreaNumber' />    <result column='create_time' property='createTime' />    <result column='update_time' property='updateTime' />  </resultMap>  <insert id='insertBookOrder' parameterType='BRP.data.BookOrder' keyProperty='id' useGeneratedKeys='true'>    insert into book_order    (id,member_id,book_order_no,deliverer_id,business_date,book_order_borrow_status_code,book_order_return_status_code,company_id,is_offline,error_remark,display_order,deliver_time,rejected_reason,delivered_time,bookpicker_id,deliver_area_number,create_time,update_time)    values    (#{id},#{memberId},#{bookOrderNo},#{delivererId},#{businessDate},#{bookOrderBorrowStatusCode},#{bookOrderReturnStatusCode},#{companyId},#{isOffline},#{errorRemark},#{displayOrder},#{deliverTime},#{rejectedReason},#{deliveredTime},#{bookpickerId},#{deliverAreaNumber},now(),now())  </insert>  <select id='selectBookOrder' parameterType='java.lang.Integer' resultMap='BookOrderResultMap'>    select * from book_order where id=#{id}  </select>  <update id='updateBookOrder' parameterType='BRP.data.BookOrder'>    update book_order set id=#{id},member_id=#{memberId},book_order_no=#{bookOrderNo},deliverer_id=#{delivererId},business_date=#{businessDate},book_order_borrow_status_code=#{bookOrderBorrowStatusCode},book_order_return_status_code=#{bookOrderReturnStatusCode},company_id=#{companyId},is_offline=#{isOffline},error_remark=#{errorRemark},display_order=#{displayOrder},deliver_time=#{deliverTime},rejected_reason=#{rejectedReason},delivered_time=#{deliveredTime},bookpicker_id=#{bookpickerId},deliver_area_number=#{deliverAreaNumber},create_time=#{createTime},update_time=#{updateTime}    where id=#{id}  </update>  <delete id='deleteBookOrder' parameterType='java.lang.Integer'>    delete from book_order where id=#{id}  </delete>  <select id='selectBookOrderByBookOrderBorrowStatusCode' parameterType='java.lang.String' resultMap='BookOrderResultMap'>    select * from book_order where book_order_borrow_status_code=#{bookOrderBorrowStatusCode}  </select>  <select id='selectBookOrderByBookOrderReturnStatusCode' parameterType='java.lang.String' resultMap='BookOrderResultMap'>    select * from book_order where book_order_return_status_code=#{bookOrderReturnStatusCode}  </select>  <select id='selectBookOrderByBookpickerId' parameterType='java.lang.Integer' resultMap='BookOrderResultMap'>    select * from book_order where bookpicker_id=#{bookpickerId}  </select>  <select id='selectBookOrderByCompanyId' parameterType='java.lang.Integer' resultMap='BookOrderResultMap'>    select * from book_order where company_id=#{companyId}  </select>  <select id='selectBookOrderByDelivererId' parameterType='java.lang.Integer' resultMap='BookOrderResultMap'>    select * from book_order where deliverer_id=#{delivererId}  </select>  <select id='selectBookOrderByMemberId' parameterType='java.lang.Integer' resultMap='BookOrderResultMap'>    select * from book_order where member_id=#{memberId}  </select>  <delete id='deleteBookOrderByBookOrderBorrowStatusCode' parameterType='java.lang.String'>    delete from book_order where book_order_borrow_status_code=#{bookOrderBorrowStatusCode}  </delete>  <delete id='deleteBookOrderByBookOrderReturnStatusCode' parameterType='java.lang.String'>    delete from book_order where book_order_return_status_code=#{bookOrderReturnStatusCode}  </delete>  <delete id='deleteBookOrderByBookpickerId' parameterType='java.lang.Integer'>    delete from book_order where bookpicker_id=#{bookpickerId}  </delete>  <delete id='deleteBookOrderByCompanyId' parameterType='java.lang.Integer'>    delete from book_order where company_id=#{companyId}  </delete>  <delete id='deleteBookOrderByDelivererId' parameterType='java.lang.Integer'>    delete from book_order where deliverer_id=#{delivererId}  </delete>  <delete id='deleteBookOrderByMemberId' parameterType='java.lang.Integer'>    delete from book_order where member_id=#{memberId}  </delete>  <insert id='insertBookOrders' parameterType='java.util.List'>    insert into book_order    (id,member_id,book_order_no,deliverer_id,business_date,book_order_borrow_status_code,book_order_return_status_code,company_id,is_offline,error_remark,display_order,deliver_time,rejected_reason,delivered_time,bookpicker_id,deliver_area_number,create_time,update_time)    values   <foreach collection='list' item='item' index='index' separator=','>    (#{item.id},#{item.memberId},#{item.bookOrderNo},#{item.delivererId},#{item.businessDate},#{item.bookOrderBorrowStatusCode},#{item.bookOrderReturnStatusCode},#{item.companyId},#{item.isOffline},#{item.errorRemark},#{item.displayOrder},#{item.deliverTime},#{item.rejectedReason},#{item.deliveredTime},#{item.bookpickerId},#{item.deliverAreaNumber},now(),#{item.updateTime})   </foreach>  </insert>  <select id='selectBookOrders' resultMap='BookOrderResultMap'>    select * from book_order  </select>  <select id='selectBookOrderBySql' parameterType='java.lang.String' resultMap='BookOrderResultMap'>    ${value}  </select>  <delete id='deleteBookOrderBySql' parameterType='java.lang.String'>    ${value}  </delete>  <update id='updateBookOrderBySql' parameterType='java.lang.String'>    ${value}  </update>  <select id='selectBookOrderByCondition' parameterType='java.lang.String' resultMap='BookOrderResultMap'>    select * from book_order where ${value}  </select>  <select id='selectCountByCondition' parameterType='java.lang.String' resultType='java.lang.Integer'>    select count(*) from book_order where ${value}  </select>  <select id='selectIntBySql' parameterType='java.lang.String' resultType='java.lang.Integer'>    ${value}  </select>  <select id='selectStringBySql' parameterType='java.lang.String' resultType='java.lang.String'>    ${value}  </select></mapper>