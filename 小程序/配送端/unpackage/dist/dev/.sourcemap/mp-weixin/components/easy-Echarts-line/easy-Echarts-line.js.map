{"version":3,"sources":["webpack:///C:/Users/Administrator/Desktop/BRPDelivery/components/easy-Echarts-line/easy-Echarts-line.vue?d4fd","webpack:///C:/Users/Administrator/Desktop/BRPDelivery/components/easy-Echarts-line/easy-Echarts-line.vue?088e","uni-app:///components/easy-Echarts-line/easy-Echarts-line.vue","webpack:///C:/Users/Administrator/Desktop/BRPDelivery/components/easy-Echarts-line/easy-Echarts-line.vue?4fb9","webpack:///C:/Users/Administrator/Desktop/BRPDelivery/components/easy-Echarts-line/easy-Echarts-line.vue?3a7a","webpack:///C:/Users/Administrator/Desktop/BRPDelivery/components/easy-Echarts-line/easy-Echarts-line.vue?1813","webpack:///C:/Users/Administrator/Desktop/BRPDelivery/components/easy-Echarts-line/easy-Echarts-line.vue?05f4"],"names":["props","args","type","default","data","isSmooth","isLinearColor","dom","width","height","isShow","legendIndex","tapEvent","tapPosition","res","tapData","dataJSON","xAxisData","watch","id","methods","smoothChange","console","linearColorChange","legendClick","tapCanvas","x","y","query","w","h","toFixedNumber","drawLineEchart","grid","left","right","top","bottom","xAxis","splitLineColor","labelTextColor","labelFontSize","splitLineLength","yAxis","unit","splitNumber","maxNumber","series","disabled","smooth","linearColor","grd","globalAlpha","dotColor","lineColor","optionObj","item","ix","ctx","xAxisLen","xAxisStart","fontHeight","yAxisLen","yAxisStart","fontHeighty","obj","text","color","isEnd","point","smoothArc","drawDataFunc","createLineDashTouch","lineDraw","isHover","alpha","fillColor","lineWidth","dotStyle","arcR","dash","lineStyle","splitLen","dataX","y2","drawLineData","tapDraw"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAA4tB,CAAgB,wvBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBCwChvB;EACAA;IACAC;MACAC;MACAC;QACA;MACA;IACA;EACA;EACAC;IACA;MACAC;MAAA;MACAC;MAAA;MACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MAAA;MACAC;MACAC;IACA;EACA;EACAC;IACAjB;MACA;MACA;MACA;MACA;QACAkB;QACAX;QACAC;MACA;MACA;MACA;MACA;MACA;IACA;EACA;EACAW;IACAC;MACAC;MACA;MACA;IACA;IACAC;MACAD;MACA;MACA;IACA;IACAE;MACA;MACA;IACA;IACAC;MAAA;MACA;MACA;QACAC;QACAC;MACA;MACA;MACA;MACA;QACA;UACA;UACAC;YACAN;YACA;cACA;gBACAO;gBACAC;gBACApB;cACA;cACA;gBACA;cACA;YACA;UACA;QACA;MACA;IACA;IACAqB;MAAA;MAAA;MAAA;MACA;QACA;MACA;IACA;IACAC;MAAA;MACA;QACAH;QAAAC;MACA;QACAG;UACAC;UACAC;UACAC;UACAC;QACA;QACAC;UACA;UACAC;UAAA;UACAC;UAAA;UACAC;UAAA;UACAC;UAAA;UACAtC;QACA;;QACAuC;UACAC;UAAA;UACAH;UAAA;UACAD;UAAA;UACAK;UAAA;UACAC;UAAA;UACAP;UAAA;UACAG;QACA;;QACAK,SACA;UACA7C;UACA8C;UAAA;UACAC;UAAA;UACAC;YAAA;YACA;YACAC;YACAA;YACA;UACA;UACAC;UAAA;UACA9C;UAAA;UACA+C;UAAA;UACAC;UAAA;UACAlD;QACA,GACA;UACAF;UACA8C;UAAA;UACAC;UAAA;UACAC;YAAA;YACA;YACAC;YACAA;YACA;UACA;UACAC;UAAA;UACA9C;UAAA;UACA+C;UAAA;UACAC;UAAA;UACAlD;QACA;MAEA;MACA;QACAmD;UACAC;UACAC;QACA;MACA;MACAC;MAAAA;MACA;MACAA;MACAA;MACA;MACAA;MACAA;MACA;MACAA;MAEAA;MACA;MACA;QACAC;QACAC;UAAAlC;UAAAC;QAAA;MACA;QAAAkC;MACAH;MACAA;MACAA;MACA;QACAA;QACAA;QACAA;QACAA;QACAA;MACA;MACAA;MACAA;MACA;MACA;QACAI;QACAC;UAAArC;UAAAC;QAAA;MACA;QAAAqC;MACAN;MACAA;MACAA;MACA;QACAA;QACAA;QACAA;QACAA;QACAA,oDACAK,8DACAA;QACA;UAAA;UACAL,mCACAK,gEACAA;QACA;MACA;;MACAL;MACA;QACA;UAAA;UACAH;YACA;cACA;YACA;YACA;YACA;cAAA;cACAG;cACAA;cACA;cACAA;cACAA;cACAO;gBACA;kBACAvC;kBACAC;gBACA;gBACA;kBAAA;kBACA;oBACA;sBACAD;sBACAC;oBACA;oBACA;sBACAD;sBAAA;sBACAC;oBACA;oBACA+B;oBACAA;kBACA;oBACAA;kBACA;gBACA;kBAAA;kBACAA;gBACA;cACA;cACAA;cACAA;cACAA;YACA;YACA;YACA;YACAO;cACA;gBACAvC;gBACAC;cACA;cACA;gBAAA;gBACA;kBACA;oBACAuC;oBACA9B;oBACA+B;oBACAC;oBACAlC;kBACA;kBACA;gBACA;cACA;cAEAwB;cACAA;cACA;gBAAA;gBACA;kBACA;oBACAhC;oBACAC;kBACA;kBACA;oBACAD;oBAAA;oBACAC,4EACA0C;kBACA;kBACA;;kBAEAX;kBACA;kBACA;kBACAA;kBACAA;kBACAA;kBACAA;kBACAA;kBACAA;kBACAA;gBACA;kBACAA;kBACAA;kBACAA;kBACAA;kBACA;gBACA;cACA;gBAAA;gBACA;gBACAY;cACA;YACA;YACA;cACAZ;cACAY;gBACAZ;cACA;cACAA;cACAY;gBACAZ;gBACAA;gBACAA;cACA;YACA;UAEA;QACA;UAAA;UACA;UACA;YAAA;YACAA;YAAAA;YACA;YACAA;YACAA;YACAH;cACA;gBACA7B;gBACAC;cACA;cACA;gBACA;kBACAD;kBACAC;gBACA;gBACA;kBACAD;kBAAA;kBACAC;gBACA;gBACA;gBACA+B;gBACA;gBACA;gBACAA;cACA;gBACA;gBACAA;cACA;YACA;YACAA;YACAA;YACAA;UACA;UACA;UACAA;UACAA;UACAH;YACA;cACA7B;cACAC;YACA;YACA;cACA;gBACAD;gBACAC;cACA;cACA;gBACAD;gBAAA;gBACAC,4EACA0C;cACA;;cACAX;cACAA;cACAA;cACAA;cACA;cACA;cACAA;cACAA;YACA;cACAA;cACAA;cACAA;cACAA;cACAA;YACA;UACA;QACA;MACA;MACAa;MACA;MACAb;MACA;IACA;IACAc;MAAA;MACAd;MACAA;MAAAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;IACA;IACA;IACAe;MAAA;MAAA;MACA;QAAAC;MACA;UACAC;UAAA;UACAvC;UAAA;UACAC;UAAA;UACAH;UAAA;UACAC;QACA;QACAmB;QAAA;QACAsB;QAAA;QACAjC;QACAkC;QACAvC;QACAwC;UACAX;UACAY;UAAA;UACAC;QACA,GACA;UACAb;UACAY;UAAA;UACAC;QACA,EACA;QACAC;QACAjE;MACAiE;QACA;UACA;YACAd;UACA;QACA;UACA;YACAA;UACA;QACA;UACA;YACAA;UACA;QACA;MACA;MACAT;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MACAA;MAEA;QACAA;QACAA,wGACAmB;QACAnB,+FACAwB,yFACArC;MACA;MACAa;MACAA;MACAA;MACAA;MAEA;QAAA;QACApB;QACAA;MACA;MAEA;QACAoB,yFACAzB;QACAyB,yFACAzB;QACA;QACA;UAAA;UACAyB,8DACAzB,oDACAA,2EACAK;QACA;UAAA;UACAoB,wGACAzB,4FACAK;QACA;MACA;MACAoB;MACA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACAA;QACA;QACA;QACA;MACA;;MACA;QACA;QACAA;QACAA;QACA;QACAP;QACAA;;QAEA;QACAO;QACAA;QACAA;QACAyB;UACA;YACAxD;UACA;YACA;cACAyD;YACA;cACA1D;cACAC;YACA;YACA;cACA+B;cACAA;cACAA;YACA;YACA;cAAA;cACAA;YACA;cAAA;cACAA;YACA;UACA;QACA;QACAA;QACA;QACAA;QACA;QACAyB;UACA;UACA;YACAzD,0FACAO,gCACAN;UACA;YACAD,gFACAC;UACA;UACA;YACA;cACAyD;YACA;cACA1D;cACAC;YACA;YACA+B;YACAA;YACAA;YACAA;YACA;cAAA;cACAA;YACA;cAAA;cACAA;YACA;YACAA;UACA;UACA;UACAA;UACAA;UACAA;UACAA;UACAA;UACAA;UACAA;UAEAA;UACAA;UACAA;UACAA;QAEA;MACA;MACA1C;QACA;UACAqE;QACA;UACAA;QACA,QAEA;MACA;MAEA;QACAC;MACA;MACA5B;IACA;EACA;AACA;AAAA,4B;;;;;;;;;;;;;AC5oBA;AAAA;AAAA;AAAA;AAAmjC,CAAgB,ujCAAG,EAAC,C;;;;;;;;;;;ACAvkC;AACA,OAAO,KAAU,EAAE,kBAKd;;;;;;;;;;;;;ACNL;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0I;AAC1I;AACqE;AACL;AACqC;;;AAGrG;AACyL;AACzL,gBAAgB,sMAAU;AAC1B,EAAE,uFAAM;AACR,EAAE,wGAAM;AACR,EAAE,iHAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,4GAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","file":"components/easy-Echarts-line/easy-Echarts-line.js","sourcesContent":["var components\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var g0 = _vm.tapData.length\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        g0: g0,\n      },\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./easy-Echarts-line.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--13-1!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./easy-Echarts-line.vue?vue&type=script&lang=js&\"","<template>\n\t<view class=\"pox\">\r\n\t\t<view class=\"legend\">\r\n\t\t\t<label @click=\"legendClick(0)\" class=\"it-line\" :style=\"{color: legendIndex===0? '#999':'#fe1303'}\">1.折线一</label>\r\n\t\t\t<label @click=\"legendClick(1)\" class=\"it-line\" :style=\"{color: legendIndex===1? '#999':'#00f000'}\">2.折线二</label>\r\n\t\t</view>\r\n\t\t\n\t\t<canvas class=\"echarts\" @tap=\"tapCanvas\" canvas-id=\"line\" id=\"line\"></canvas>\n\t\t\n\t\t<template v-if=\"tapData.length > 0\">\n\t\t\t<view class=\"position-box\" id=\"position-box\" :style=\"{left: tapData[0].left+'px',top: tapData[0].top+'px'}\">\n\t\t\t<view\r\n\t\t\tclass=\"item-box\"\r\n\t\t\t:style=\"{color: item.color, borderTop: indx===1?'2rpx solid #999':''}\"\r\n\t\t\tv-for=\"(item,indx) in tapData\"\r\n\t\t\t:key=\"indx\"> ● {{item.text}}</view>\n\t\t\t</view>\n\t\t</template>\n\t\t<!-- 以下view可以看完说明删除 -->\n\t\t<view class=\"tip\">\r\n\t\t\t<view>\r\n\t\t\t\t<label>是否曲线smooth(true)直线(false):</label>\r\n\t\t\t\t<switch style=\"transform: scale(0.6);\" :checked=\"isSmooth\" type=\"switch\" @change=\"smoothChange\" />\r\n\t\t\t</view>\r\n\t\t\t<view>\r\n\t\t\t\t<label>是否有阴影isLinearColor(true)直线(false):</label>\r\n\t\t\t\t<switch style=\"transform: scale(0.6);\" :checked=\"isLinearColor\" type=\"switch\" @change=\"linearColorChange\" />\r\n\t\t\t</view>\r\n\t\t\t<view>\n\t\t\t\t<text>\n\t\t\t\t\t说明文档：\n\t\t\t\t\t1、点击折线图区域可以去除图例（1.折线一，2.折线二）效果。\n\t\t\t\t\t2、参数设置在方法drawLineEchart中optionObj对象（参数类似百度echarts格式）。\n\t\t\t\t</text>\r\n\t\t\t</view>\n\t\t</view>\n\t</view>\n</template>\n\n<script>\n\texport default {\n\t\tprops:{\n\t\t\targs: {\n\t\t\t\ttype: Object,\n\t\t\t\tdefault:()=>{\n\t\t\t\t\treturn {}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdata() {\n\t\t\treturn {\r\n\t\t\t\tisSmooth: true,//是否有曲线\r\n\t\t\t\tisLinearColor: true,//是否有阴影\r\n\t\t\t\tdom: {\r\n\t\t\t\t\twidth: 0,\r\n\t\t\t\t\theight: 0,\r\n\t\t\t\t\tisShow: false\r\n\t\t\t\t},\n\t\t\t\tlegendIndex: null,\n\t\t\t\ttapEvent: null,\n\t\t\t\ttapPosition: null,\n\t\t\t\tres: null,\n\t\t\t\ttapData:[],//点击弹窗中数据\n\t\t\t\tdataJSON: [],\n\t\t\t\txAxisData: []\n\t\t\t}\n\t\t},\n\t\twatch:{\n\t\t\targs(obj){\n\t\t\t\tthis.tapData = [];\n\t\t\t\tthis.xAxisData = obj.xAxisData;//坐标轴x\n\t\t\t\tthis.dataJSON = obj.dataJSON;//数据\n\t\t\t\tconst res = {\n\t\t\t\t\t\tid: \"line\",\n\t\t\t\t\t width: uni.upx2px(750),\n\t\t\t\t\theight: uni.upx2px(360)\n\t\t\t\t};\n\t\t\t\tthis.res = res;\n\t\t\t\tconst dpr = uni.getSystemInfoSync().pixelRatio;\n\t\t\t\t// this.lineDraw(\"line\", res, -1);\n\t\t\t\tthis.drawLineEchart(\"line\",res);\n\t\t\t}\n\t\t},\n\t\tmethods: {\r\n\t\t\tsmoothChange(e){\r\n\t\t\t\tconsole.log(\"smooth\",e);\r\n\t\t\t\tthis.isSmooth = e.detail.value;\r\n\t\t\t\tthis.drawLineEchart(\"line\",this.res);\r\n\t\t\t},\r\n\t\t\tlinearColorChange(e){\r\n\t\t\t\tconsole.log(\"linearcolor\",e);\r\n\t\t\t\tthis.isLinearColor = e.detail.value;\r\n\t\t\t\tthis.drawLineEchart(\"line\",this.res);\r\n\t\t\t},\n\t\t\tlegendClick(num){\n\t\t\t\tthis.legendIndex = num;\n\t\t\t\tthis.drawLineEchart(\"line\",this.res);\n\t\t\t},\n\t\t\ttapCanvas(e){\n\t\t\t\tthis.legendIndex = null;\n\t\t\t\tconst pox = {\n\t\t\t\t\tx: e.detail.x,\n\t\t\t\t\ty: e.detail.y\n\t\t\t\t};\n\t\t\t\tthis.tapData = [];\n\t\t\t\tthis.drawLineEchart(\"line\",this.res,pox);\r\n\t\t\t\tif(this.tapData.length > 0){\r\n\t\t\t\t\tthis.$nextTick(()=>{\r\n\t\t\t\t\t\tconst query = uni.createSelectorQuery().in(this);\r\n\t\t\t\t\t\tquery.select('#position-box').boundingClientRect(data => {\r\n\t\t\t\t\t\t\tconsole.log(\"得到布局位置信息\", data);\r\n\t\t\t\t\t\t\tif(data && data.width){\r\n\t\t\t\t\t\t\t\tthis.dom = {\r\n\t\t\t\t\t\t\t\t\t\tw: data.width,\r\n\t\t\t\t\t\t\t\t\t\th: data.height,\r\n\t\t\t\t\t\t\t\t   isShow: true\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tif(this.tapData[0].isEnd){\r\n\t\t\t\t\t\t\t\t\tthis.tapData[0].left = this.tapData[0].left - data.width;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}).exec();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\n\t\t\t},\n\t\t\ttoFixedNumber(n = 2, val) { //去小数点后2位\n\t\t\t\tif (typeof val == \"number\") {\n\t\t\t\t\treturn val.toFixed(n)/1\n\t\t\t\t}\n\t\t\t},\n\t\t\tdrawLineEchart(ids,res,pox){\n\t\t\t\tlet ctx = uni.createCanvasContext(ids,this),\n\t\t\t\tw = res.width, h = res.height;\n\t\t\t\tconst optionObj = {\n\t\t\t\t\tgrid:{\n\t\t\t\t\t\t  left: 30,\n\t\t\t\t\t\t right: w-20,\n\t\t\t\t\t\t   top: 20,\n\t\t\t\t\t\tbottom: h-25,\n\t\t\t\t\t},\n\t\t\t\t\txAxis:{\n\t\t\t\t\t\t// splitNumber: 7,\n\t\t\t\t\t\tsplitLineColor: '#838383',//刻度线颜色\n\t\t\t\t\t\tlabelTextColor: \"#333\",//刻度文字颜色\r\n\t\t\t\t\t\tlabelFontSize: 12,//刻度文字fontsize\r\n\t\t\t\t\t\tsplitLineLength: 5,//刻度线长度\n\t\t\t\t\t\tdata: this.xAxisData,//x轴上数据\n\t\t\t\t\t},\n\t\t\t\t\tyAxis:{\n\t\t\t\t\t\tunit: '度',//单位\r\n\t\t\t\t\t\tlabelFontSize: 12,//刻度文字fontsize\r\n\t\t\t\t\t\tlabelTextColor: \"#333\",//刻度文字颜色\n\t\t\t\t\t\tsplitNumber: 4,//分割几段\n\t\t\t\t\t\tmaxNumber: 100,//y轴最上方最大值\n\t\t\t\t\t\tsplitLineColor: '#838383',//刻度线颜色\n\t\t\t\t\t\tsplitLineLength: 5,//刻度线长度\n\t\t\t\t\t},\n\t\t\t\t\tseries:[\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"line\",\n\t\t\t\t\t\t\tdisabled: false,//是否禁用图例切换\r\n\t\t\t\t\t\t\tsmooth: this.isSmooth,//是否贝塞尔曲线true,false直线连接\n\t\t\t\t\t\t\tlinearColor:(w,h)=>{//设置渐变色\n\t\t\t\t\t\t\t\tconst grd = ctx.createLinearGradient(w, 20, w, h);\n\t\t\t\t\t\t\t\tgrd.addColorStop(0.3, 'orange');\n\t\t\t\t\t\t\t\tgrd.addColorStop(0.9, 'yellow');\n\t\t\t\t\t\t\t\treturn grd;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tglobalAlpha: 0.9,//设置背景透明值0-1\n\t\t\t\t\t\t\tisLinearColor: this.isLinearColor,//是否加背景渐变色\n\t\t\t\t\t\t\tdotColor: \"#f00\",//圆点中间颜色\n\t\t\t\t\t\t\tlineColor: \"#535353\",//边框line颜色\n\t\t\t\t\t\t\tdata:[10, 80, 23, 62, 44, 34]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: \"line\",\n\t\t\t\t\t\t\tdisabled: false,//是否禁用 图例切换\n\t\t\t\t\t\t\tsmooth: this.isSmooth,//是否贝塞尔曲线true,false直线连接\r\n\t\t\t\t\t\t\tlinearColor:(w,h)=>{//设置渐变色\n\t\t\t\t\t\t\t\tconst grd = ctx.createLinearGradient(w, 20, w, h);\n\t\t\t\t\t\t\t\tgrd.addColorStop(0.3, 'green');\n\t\t\t\t\t\t\t\tgrd.addColorStop(0.9, '#8775e3');\n\t\t\t\t\t\t\t\treturn grd;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tglobalAlpha: 0.6,//设置背景透明值0-1\n\t\t\t\t\t\t\tisLinearColor: this.isLinearColor,//是否加背景渐变色\n\t\t\t\t\t\t\tdotColor: \"#00f000\",//圆点中间颜色\n\t\t\t\t\t\t\tlineColor: \"#555\",//边框line颜色\n\t\t\t\t\t\t\tdata:[90, 10, 63, 42, 54, 64]\n\t\t\t\t\t\t},\n\t\t\t\t\t]\n\t\t\t\t};\n\t\t\t\tif(Array.isArray(optionObj.series)){\n\t\t\t\t\toptionObj.series.forEach((item,ix)=>{\n\t\t\t\t\t\titem.data = this.dataJSON[ix];\n\t\t\t\t\t\tix === this.legendIndex?item.disabled=true:item.disabled = false;\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tctx.beginPath();ctx.globalAlpha = 1;\n\t\t\t\t//绘制 x轴\n\t\t\t\tctx.moveTo(optionObj.grid.left, optionObj.grid.bottom);\n\t\t\t\tctx.lineTo(optionObj.grid.right, optionObj.grid.bottom);\n\t\t\t\t//绘制 y轴\n\t\t\t\tctx.moveTo(optionObj.grid.left, optionObj.grid.top);\n\t\t\t\tctx.lineTo(optionObj.grid.left, optionObj.grid.bottom);\n\t\t\t\t//绘制折线\n\t\t\t\tctx.stroke();\r\n\t\t\t\t\n\t\t\t\tctx.beginPath();\n\t\t\t\t//绘制 x轴刻度\n\t\t\t\tconst len = optionObj.xAxis.data.length-1,\n\t\t\t\txAxisLen = w-optionObj.grid.left-(w-optionObj.grid.right),\n\t\t\t\txAxisStart = {x: optionObj.grid.left,y: optionObj.grid.bottom};\n\t\t\t\tconst splitLen = xAxisLen/len, fontHeight = 8+optionObj.xAxis.splitLineLength;\n\t\t\t\tctx.strokeStyle = optionObj.xAxis.splitLineColor;\n\t\t\t\tctx.setFontSize(optionObj.xAxis.labelFontSize);\r\n\t\t\t\tctx.setFillStyle(optionObj.xAxis.labelTextColor);\r\n\t\t\t\tfor(let i=0;i<=len;i++){\n\t\t\t\t\tctx.moveTo(xAxisStart.x+splitLen*i, xAxisStart.y);\n\t\t\t\t\tctx.lineTo(xAxisStart.x+splitLen*i, xAxisStart.y+optionObj.xAxis.splitLineLength);\n\t\t\t\t\tctx.textAlign = \"center\";\n\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\tctx.fillText(optionObj.xAxis.data[i], xAxisStart.x+splitLen*i, xAxisStart.y+fontHeight); \n\t\t\t\t}\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.beginPath();\n\t\t\t\t//绘制 y轴刻度\n\t\t\t\tconst leny = optionObj.yAxis.splitNumber,\n\t\t\t\tyAxisLen = h-optionObj.grid.top-(h-optionObj.grid.bottom),\n\t\t\t\tyAxisStart = {x: optionObj.grid.left,y: optionObj.grid.bottom};\n\t\t\t\tconst splitLeny = yAxisLen/leny, fontHeighty = 3;\n\t\t\t\tctx.strokeStyle = optionObj.yAxis.splitLineColor;\r\n\t\t\t\tctx.setFontSize(optionObj.yAxis.labelFontSize);\r\n\t\t\t\tctx.setFillStyle(optionObj.yAxis.labelTextColor);\n\t\t\t\tfor(let i=0;i<=leny;i++){\n\t\t\t\t\tctx.moveTo(yAxisStart.x, yAxisStart.y-splitLeny*i);\n\t\t\t\t\tctx.lineTo(yAxisStart.x-optionObj.yAxis.splitLineLength, yAxisStart.y-splitLeny*i);\n\t\t\t\t\tctx.textAlign = \"right\";\n\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\tctx.fillText(optionObj.yAxis.maxNumber/leny*i,\n\t\t\t\t\tyAxisStart.x-optionObj.yAxis.splitLineLength-fontHeighty,\n\t\t\t\t\tyAxisStart.y-splitLeny*i);\n\t\t\t\t\tif(i==leny){//最后一个值 定义的unit单位显示\n\t\t\t\t\t\tctx.fillText(optionObj.yAxis.unit,\n\t\t\t\t\t\tyAxisStart.x+ctx.measureText(optionObj.yAxis.unit).width/2,\n\t\t\t\t\t\tyAxisStart.y-splitLeny*i-8);//8是y轴离刻度单位 “度”的间距\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tctx.stroke();\n\t\t\t\tlet drawDataFunc=()=>{\n\t\t\t\t\tif(Array.isArray(optionObj.series)){//是数组array\n\t\t\t\t\toptionObj.series.forEach((obj,inx)=>{\n\t\t\t\t\t\tif(obj.disabled){\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t//绘制数据区域渐变背景\n\t\t\t\t\tif(obj.isLinearColor){//判断是否需要渐变背景色\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.globalAlpha = obj.globalAlpha;\n\t\t\t\t\t//设置渐变色 color值\n\t\t\t\t\tctx.fillStyle = obj.linearColor(w,h);//渐变色\n\t\t\t\t\tctx.moveTo(optionObj.grid.left, optionObj.grid.bottom-1,1,0,2*Math.PI);\n\t\t\t\t\tobj.data.forEach((val,index,arr)=>{\n\t\t\t\t\t\tconst point = {\n\t\t\t\t\t\t\tx: xAxisStart.x+splitLen*index,\n\t\t\t\t\t\t\ty: yAxisStart.y-val/optionObj.yAxis.maxNumber*yAxisLen\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif(obj.smooth){//采用曲线渲染\r\n\t\t\t\t\t\t\tif(index < arr.length-1){\r\n\t\t\t\t\t\t\t\tconst pointNext = {\r\n\t\t\t\t\t\t\t\tx: xAxisStart.x+splitLen*(index+1),\r\n\t\t\t\t\t\t\t\ty: yAxisStart.y-(obj.data[index+1])/optionObj.yAxis.maxNumber*yAxisLen\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tconst ctrlPoint = {\r\n\t\t\t\t\t\t\t\tx: pointNext.y-point.y < 0 ?point.x:pointNext.x,//自己定义的控制点x\r\n\t\t\t\t\t\t\t\ty: pointNext.y-point.y < 0 ?point.y+(pointNext.y-point.y)/2-10:point.y+(pointNext.y-point.y)/2\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tctx.lineTo(point.x, point.y);\r\n\t\t\t\t\t\t\t\tctx.quadraticCurveTo(ctrlPoint.x, ctrlPoint.y, pointNext.x, pointNext.y);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tctx.arc(point.x, point.y, 3, 0, 2*Math.PI);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}else{//采用直线渲染\r\n\t\t\t\t\t\t\tctx.lineTo(point.x, point.y,1,0,2*Math.PI);\r\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tctx.lineTo(optionObj.grid.right, optionObj.grid.bottom,1,0,2*Math.PI);\n\t\t\t\t\tctx.lineTo(optionObj.grid.left, optionObj.grid.bottom,1,0,2*Math.PI);\n\t\t\t\t\tctx.fill();\n\t\t\t\t\t}\n\t\t\t\t\t//数据曲线 或 直线连接渲染\r\n\t\t\t\t\tconst smoothArc = [];\n\t\t\t\t\tobj.data.forEach((val,index,arr)=>{\n\t\t\t\t\t\tconst point = {\n\t\t\t\t\t\t\tx: xAxisStart.x+splitLen*index,\n\t\t\t\t\t\t\ty: yAxisStart.y-val/optionObj.yAxis.maxNumber*yAxisLen\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif(pox){//绘制tap触摸echarts中间显示 内容\n\t\t\t\t\t\t\tif(point.x-6 < pox.x && pox.x < point.x+6){\n\t\t\t\t\t\t\t\tthis.tapData.push({\n\t\t\t\t\t\t\t\t\ttext: val,\n\t\t\t\t\t\t\t\t\t top: pox.y,\n\t\t\t\t\t\t\t\t   color: obj.dotColor,\r\n\t\t\t\t\t\t\t\t   isEnd: arr.length-1 === index,\n\t\t\t\t\t\t\t\t\tleft: arr.length-1 === index ? point.x:point.x\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.createLineDashTouch(ctx, point, optionObj, val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tctx.fillStyle = obj.dotColor;//设置圆中间颜色\r\n\t\t\t\t\t\tctx.strokeStyle = obj.lineColor;//设置line线颜色\r\n\t\t\t\t\t\tif(obj.smooth){//采用曲线连接\r\n\t\t\t\t\t\t\tif(index < arr.length-1){\r\n\t\t\t\t\t\t\t\tconst pointNext = {\r\n\t\t\t\t\t\t\t\t\tx: xAxisStart.x+splitLen*(index+1),\r\n\t\t\t\t\t\t\t\t\ty: yAxisStart.y-(obj.data[index+1])/optionObj.yAxis.maxNumber*yAxisLen\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\tconst ctrlPoint = {\r\n\t\t\t\t\t\t\t\t\tx: pointNext.y-point.y < 0 ?point.x:pointNext.x,//自己定义的控制点x\r\n\t\t\t\t\t\t\t\t\ty: pointNext.y-point.y < 0 ?point.y+(pointNext.y-point.y)/2-10:\r\n\t\t\t\t\t\t\t\t\tpoint.y+(pointNext.y-point.y)/2,//自己定义的控制点y\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t\t//绘制数据 series.data\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\t// ctx.moveTo(ctrlPoint.x+1, ctrlPoint.y);\r\n\t\t\t\t\t\t\t\t// ctx.arc(ctrlPoint.x, ctrlPoint.y, 1, 0,2*Math.PI);\r\n\t\t\t\t\t\t\t\tctx.lineTo(point.x, point.y);\r\n\t\t\t\t\t\t\t\tctx.quadraticCurveTo(ctrlPoint.x, ctrlPoint.y, pointNext.x, pointNext.y);\r\n\t\t\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\tctx.moveTo(point.x, point.y);\r\n\t\t\t\t\t\t\t\tctx.arc(point.x, point.y, 3, 0, 2*Math.PI);\r\n\t\t\t\t\t\t\t\tctx.fill();\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\t\tctx.moveTo(point.x-3, point.y);\r\n\t\t\t\t\t\t\t\tctx.arc(point.x, point.y, 3, 0, 2*Math.PI);\r\n\t\t\t\t\t\t\t\tctx.fill();\r\n\t\t\t\t\t\t\t\t// ctx.stroke();\r\n\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t}else{//采用直线连接\r\n\t\t\t\t\t\t\t// ctx.arc(point.x, point.y,3, 0, 2*Math.PI);\r\n\t\t\t\t\t\t\tsmoothArc.push(point);\r\n\t\t\t\t\t\t}\n\t\t\t\t\t})\r\n\t\t\t\t\tif(smoothArc.length>0){\r\n\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\tsmoothArc.forEach(point=>{\r\n\t\t\t\t\t\t\tctx.lineTo(point.x, point.y);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tctx.stroke();\r\n\t\t\t\t\t\tsmoothArc.forEach(arc=>{\r\n\t\t\t\t\t\t\tctx.beginPath();\r\n\t\t\t\t\t\t\tctx.arc(arc.x, arc.y, 3, 0, 2*Math.PI);\r\n\t\t\t\t\t\t\tctx.fill();\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\n\t\t\t\t\t})\n\t\t\t\t\t}else if(typeof optionObj.series == 'object'){//是对象object\n\t\t\t\t\t//绘制数据区域渐变背景\n\t\t\t\t\tif(optionObj.series.isLinearColor){//判断是否需要渐变背景色\n\t\t\t\t\tctx.beginPath();ctx.globalAlpha = optionObj.series.globalAlpha;\n\t\t\t\t\t//设置渐变色 color值\n\t\t\t\t\tctx.fillStyle = optionObj.series.linearColor(w,h);//渐变色\n\t\t\t\t\tctx.arc(optionObj.grid.left, optionObj.grid.bottom-1,1,0,2*Math.PI);\n\t\t\t\t\toptionObj.series.data.forEach((val,index,arr)=>{\n\t\t\t\t\t\tconst point = {\n\t\t\t\t\t\t\tx: xAxisStart.x+splitLen*index,\n\t\t\t\t\t\t\ty: yAxisStart.y-val/optionObj.yAxis.maxNumber*yAxisLen\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif(index < arr.length-1){\n\t\t\t\t\t\t\tconst pointNext = {\n\t\t\t\t\t\t\tx: xAxisStart.x+splitLen*(index+1),\n\t\t\t\t\t\t\ty: yAxisStart.y-(optionObj.series.data[index+1])/optionObj.yAxis.maxNumber*yAxisLen\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tconst ctrlPoint = {\n\t\t\t\t\t\t\tx: pointNext.y-point.y < 0 ?point.x:pointNext.x,//自己定义的控制点x\n\t\t\t\t\t\t\ty: pointNext.y-point.y < 0 ?point.y+(pointNext.y-point.y)/2-10:point.y+(pointNext.y-point.y)/2\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t// ctx.moveTo(point.x+2, point.y);\n\t\t\t\t\t\t\tctx.arc(point.x, point.y, 3, 0, 2*Math.PI);\n\t\t\t\t\t\t\t// ctx.moveTo(ctrlPoint.x+1, ctrlPoint.y);\n\t\t\t\t\t\t\t// ctx.arc(ctrlPoint.x, ctrlPoint.y, 1, 0,2*Math.PI);\n\t\t\t\t\t\t\tctx.quadraticCurveTo(ctrlPoint.x, ctrlPoint.y, pointNext.x, pointNext.y);\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t// ctx.moveTo(point.x+2, point.y);\n\t\t\t\t\t\t\tctx.arc(point.x, point.y, 3, 0, 2*Math.PI);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\tctx.arc(optionObj.grid.right, optionObj.grid.bottom-1,1,0,2*Math.PI);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\t}\n\t\t\t\t\t//绘制数据 series.data\n\t\t\t\t\tctx.fillStyle=optionObj.series.dotColor;//设置圆中间颜色\n\t\t\t\t\tctx.strokeStyle=optionObj.series.lineColor;//设置line线颜色\n\t\t\t\t\toptionObj.series.data.forEach((val,index,arr)=>{\n\t\t\t\t\t\tconst point = {\n\t\t\t\t\t\t\tx: xAxisStart.x+splitLen*index,\n\t\t\t\t\t\t\ty: yAxisStart.y-val/optionObj.yAxis.maxNumber*yAxisLen\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif(index < arr.length-1){\n\t\t\t\t\t\t\tconst pointNext = {\n\t\t\t\t\t\t\t\tx: xAxisStart.x+splitLen*(index+1),\n\t\t\t\t\t\t\t\ty: yAxisStart.y-(optionObj.series.data[index+1])/optionObj.yAxis.maxNumber*yAxisLen\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tconst ctrlPoint = {\n\t\t\t\t\t\t\t\tx: pointNext.y-point.y < 0 ?point.x:pointNext.x,//自己定义的控制点x\n\t\t\t\t\t\t\t\ty: pointNext.y-point.y < 0 ?point.y+(pointNext.y-point.y)/2-10:\n\t\t\t\t\t\t\t\tpoint.y+(pointNext.y-point.y)/2,//自己定义的控制点y\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(point.x+3, point.y);\n\t\t\t\t\t\t\tctx.arc(point.x, point.y, 3, 0, 2*Math.PI);\n\t\t\t\t\t\t\tctx.fill();\n\t\t\t\t\t\t\t// ctx.moveTo(ctrlPoint.x+1, ctrlPoint.y);\n\t\t\t\t\t\t\t// ctx.arc(ctrlPoint.x, ctrlPoint.y, 1, 0,2*Math.PI);\n\t\t\t\t\t\t\tctx.quadraticCurveTo(ctrlPoint.x, ctrlPoint.y, pointNext.x, pointNext.y);\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(point.x+3, point.y);\n\t\t\t\t\t\t\tctx.arc(point.x, point.y, 3, 0, 2*Math.PI);\n\t\t\t\t\t\t\tctx.fill();\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t}\n\t\t\t\t\t})\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdrawDataFunc();\n\t\t\t\t//显示tap and touch canvas\n\t\t\t\tctx.draw();\n\t\t\t\t//end draw\n\t\t\t},\n\t\t\tcreateLineDashTouch(ctx,pox,obj,val){//触摸折线图显示\n\t\t\t\tctx.save();\n\t\t\t\tctx.beginPath();ctx.strokeStyle=\"#000\";\n\t\t\t\tctx.setLineDash([2,5]);\n\t\t\t\tctx.moveTo(pox.x, obj.grid.top);\n\t\t\t\tctx.lineTo(pox.x, obj.grid.bottom);\n\t\t\t\tctx.moveTo(obj.grid.left, pox.y);\n\t\t\t\tctx.lineTo(pox.x, pox.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.restore();\n\t\t\t},\n\t\t\t//绘制线条 line chart老版本修改 ·距离左侧 y轴 |距离为0 lineDraw\n\t\t\tlineDraw(ids, elem, num = -1) {\n\t\t\t\tlet ctx = uni.createCanvasContext(ids,this),isHover = null;\n\t\t\t\tlet grid = {\n\t\t\t\t\talpha: 0.6,//透明度值 1 - 0.1\n\t\t\t\t\t  top: (12 * elem.height) / 100, //canvas标签的高度的12%（相对总高的百分比）\n\t\t\t\t   bottom: ((100 - 18) * elem.height) / 100, //canvas图形距离底部的百分比 18%\n\t\t\t\t\t left: (12 * elem.width) / 100, //距离左侧的百分比（12%总宽度）\n\t\t\t\t\tright: ((100 - 8) * elem.width) / 100 //距离右侧百分比（8%总宽度）\n\t\t\t\t},\n\t\t\t\tlineColor = \"#999\", //x,y轴线颜色\n\t\t\t\tfillColor = \"#333\", //x,y轴number颜色\n\t\t\t\tyAxis = this.yAxis,\n\t\t\t\tlineWidth = 1,\n\t\t\t\txAxis = this.xAxis,\n\t\t\t\tdotStyle = [{\n\t\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t\t\tarcR: 1, //小圆点1 ○ 半径\n\t\t\t\t\t\tdash: 0 //是否线条虚线 0实线 1以上虚线\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tcolor: \"#fff\",\n\t\t\t\t\t\tarcR: 1, //小圆点2 ○半径\n\t\t\t\t\t\tdash: 0 //是否线条虚线 0实线 1以上虚线\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tlineStyle = this.lineStyle,\n\t\t\t\tdataJSON = this.dataJSON; //数据data\n\t\t\t\tlineStyle.forEach((ep, vp) => {\n\t\t\t\t\tif (num == vp) {\n\t\t\t\t\t\tthis.lineColorArr[vp] = {\n\t\t\t\t\t\t\tcolor: ep.color\n\t\t\t\t\t\t};\n\t\t\t\t\t} else if (num == -1) {\n\t\t\t\t\t\tthis.lineColorArr[vp] = {\n\t\t\t\t\t\t\tcolor: ep.color\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.lineColorArr[vp] = {\n\t\t\t\t\t\t\tcolor: \"#888\"\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.setLineWidth(lineWidth);\n\t\t\t\tctx.setTextAlign(\"right\");\n\t\t\t\tctx.setTextBaseline(\"middle\");\n\t\t\t\tctx.setStrokeStyle(lineColor);\n\t\t\t\tctx.setFillStyle(fillColor);\n\t\t\t\tctx.moveTo(grid.left, grid.top);\n\t\t\t\tctx.lineTo(grid.left, grid.bottom);\n\t\t\t\tctx.setFontSize(yAxis.textSize);\n\t\t\t\t\n\t\t\t\tfor (let n = 1; n <= yAxis.splitNumber; n++) {\n\t\t\t\t\tctx.moveTo(grid.left, grid.bottom - (grid.bottom - grid.top) / yAxis.splitNumber * n + lineWidth);\n\t\t\t\t\tctx.lineTo(grid.left - yAxis.splitLen, grid.bottom - (grid.bottom - grid.top) / yAxis.splitNumber * n +\n\t\t\t\t\t\tlineWidth);\n\t\t\t\t\tctx.fillText(this.toFixedNumber(1, yAxis.maxNumber / yAxis.splitNumber * n), grid.left - yAxis\n\t\t\t\t\t\t.splitLen - lineWidth - yAxis.marginSplit, grid.bottom - (grid.bottom - grid.top) / yAxis\n\t\t\t\t\t\t.splitNumber * n + lineWidth);\n\t\t\t\t}\n\t\t\t\tctx.moveTo(grid.left, grid.bottom);\n\t\t\t\tctx.lineTo(grid.right, grid.bottom);\n\t\t\t\tctx.setTextAlign(\"center\");\n\t\t\t\tctx.setFontSize(xAxis.textSize);\n\t\t\t\t\n\t\t\t\tif(typeof dataJSON[0].x[0] != \"number\"){//非number类型数据\n\t\t\t\t\txAxis.splitNumber = dataJSON[0].x.length-1;\n\t\t\t\t\txAxis.maxNumber = dataJSON[0].x.length-1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (let n = 1; n <= xAxis.splitNumber+1; n++) {\n\t\t\t\t\tctx.moveTo(grid.left + (grid.right - grid.left) / xAxis.splitNumber * n -(grid.right -\n\t\t\t\t\t\t\t\tgrid.left) / xAxis.splitNumber, grid.bottom);\n\t\t\t\t\tctx.lineTo(grid.left + (grid.right - grid.left) / xAxis.splitNumber * n -(grid.right -\n\t\t\t\t\t\t\t\tgrid.left) / xAxis.splitNumber, grid.bottom+xAxis.splitLen);\n\t\t\t\t\t\t//this.toFixedNumber(1, xAxis.maxNumber / xAxis.splitNumber * n)\n\t\t\t\t\tif( typeof dataJSON[0].x[n-1] != \"number\"){//数据非number类型\n\t\t\t\t\t\tctx.fillText(dataJSON[0].x[n-1], grid.left + (grid.right -\n\t\t\t\t\t\t\t\tgrid.left) / xAxis.splitNumber * n-(grid.right -\n\t\t\t\t\t\t\t\tgrid.left) / xAxis.splitNumber, grid.bottom + xAxis.splitLen + lineWidth +\n\t\t\t\t\t\t\txAxis.marginSplit)\n\t\t\t\t\t}else{//number类型\n\t\t\t\t\t\tctx.fillText(this.toFixedNumber(1, xAxis.maxNumber / xAxis.splitNumber * n), grid.left + (grid.right -\n\t\t\t\t\t\t\t\tgrid.left) / xAxis.splitNumber * n - lineWidth, grid.bottom + xAxis.splitLen + lineWidth +\n\t\t\t\t\t\t\txAxis.marginSplit)\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\tctx.stroke();\n\t\t\t\tlet tapDraw = (obj, data) => {\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.setFillStyle(\"#2C405A\");\n\t\t\t\t\tctx.setStrokeStyle(\"#E6A23C\");\n\t\t\t\t\tctx.setLineDash([5]);\n\t\t\t\t\tctx.setLineWidth(1);\n\t\t\t\t\tctx.moveTo(grid.left, obj.y - obj.offsetTop);\n\t\t\t\t\tctx.lineTo(grid.right, obj.y - obj.offsetTop);\n\t\t\t\t\tctx.moveTo(obj.x - obj.offsetLeft, grid.top);\n\t\t\t\t\tctx.lineTo(obj.x - obj.offsetLeft, grid.bottom);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.restore();\n\t\t\t\t\t// ctx.draw(true, function(res,obj){\n\t\t\t\t\t// \tconsole.log('draw success', ctx);\n\t\t\t\t\t// });\n\t\t\t\t}\n\t\t\t\tlet drawLineData = (dataX, dataY, ix) => {\n\t\t\t\t\t//折线下方区域的渐变色\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.setGlobalAlpha(grid.alpha);//设置透明度\n\t\t\t\t\tconst grd = ctx.createLinearGradient(grid.left, grid.top, grid.left, grid.bottom);\n\t\t\t\t\tgrd.addColorStop(0, lineStyle[ix].color);\n\t\t\t\t\tgrd.addColorStop(1, lineStyle[ix].deepColor);\n\t\t\t\t\t\n\t\t\t\t\t// Fill with gradient\n\t\t\t\t\tctx.setFillStyle(grd);\n\t\t\t\t\tctx.setStrokeStyle(lineStyle[ix].color);\n\t\t\t\t\tctx.setLineDash([lineStyle[ix].dash]);\n\t\t\t\t\tdataX.forEach((ele, indx) => {\n\t\t\t\t\t\tlet x = grid.left + (grid.right - grid.left) * ((indx+1) / xAxis.maxNumber)-(grid.right-grid.left) / xAxis.splitNumber,\n\t\t\t\t\t\t\ty = grid.bottom - (grid.bottom - grid.top) * (dataY[indx] / yAxis.maxNumber) +lineWidth;\n\t\t\t\t\t\tif (indx >= dataX.length - 1) {} else {\n\t\t\t\t\t\t\tlet x2 = grid.left + (grid.right - grid.left) * ((indx + 2) / xAxis.maxNumber)-(grid.right -grid.left) / xAxis.splitNumber,\n\t\t\t\t\t\t\ty2 = grid.bottom - (grid.bottom - grid.top) * (dataY[indx + 1] / yAxis.maxNumber) + lineWidth;\n\t\t\t\t\t\t\tlet dis = {\n\t\t\t\t\t\t\t\tx: x + (x2 - x) / 3 + (x2 - x) / 2,\n\t\t\t\t\t\t\t\ty: y2 - y > 0 ? y + (y2 - y) / 3 - (y2 - y) / 5 : y + (y2 - y) / 3 + (y2 - y) / 5\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tif(indx === 0){\n\t\t\t\t\t\t\t\tctx.moveTo(grid.right, grid.bottom);\n\t\t\t\t\t\t\t\tctx.lineTo(x, grid.bottom);\n\t\t\t\t\t\t\t\tctx.lineTo(x, y);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (lineStyle[ix].lineDotType == \"line\") { //直线连接\n\t\t\t\t\t\t\t\tctx.lineTo(x2, y2);\n\t\t\t\t\t\t\t}else if (lineStyle[ix].lineDotType == \"wave\") { //二次贝塞尔曲线连接\n\t\t\t\t\t\t\t\tctx.quadraticCurveTo(dis.x, dis.y, x2, y2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\t// ctx.stroke();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\t//绘制文字 小圆点\n\t\t\t\t\tdataX.forEach((ele, indx) => {\n\t\t\t\t\t\tlet x,y;\n\t\t\t\t\t\tif(typeof ele !== \"number\"){\n\t\t\t\t\t\t\tx = grid.left + (grid.right - grid.left) * ((indx+1) / xAxis.maxNumber)-(grid.right -\n\t\t\t\t\t\t\t\tgrid.left) / xAxis.splitNumber,\n\t\t\t\t\t\t\ty = grid.bottom - (grid.bottom - grid.top) * (dataY[indx] / yAxis.maxNumber) +lineWidth;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tx = grid.left + (grid.right - grid.left) * (ele / xAxis.maxNumber) - lineWidth,\n\t\t\t\t\t\t\ty = grid.bottom - (grid.bottom - grid.top) * (dataY[indx] / yAxis.maxNumber) +lineWidth;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (indx >= dataX.length - 1) {} else {\n\t\t\t\t\t\t\tlet x2 = grid.left + (grid.right - grid.left) * ((indx + 2) / xAxis.maxNumber)-(grid.right -grid.left) / xAxis.splitNumber,\n\t\t\t\t\t\t\ty2 = grid.bottom - (grid.bottom - grid.top) * (dataY[indx + 1] / yAxis.maxNumber) + lineWidth;\n\t\t\t\t\t\t\tlet dis = {\n\t\t\t\t\t\t\t\tx: x + (x2 - x) / 3 + (x2 - x) / 2,\n\t\t\t\t\t\t\t\ty: y2 - y > 0 ? y + (y2 - y) / 3 - (y2 - y) / 5 : y + (y2 - y) / 3 + (y2 - y) / 5\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.setGlobalAlpha(1);//设置透明度\n\t\t\t\t\t\t\tctx.setStrokeStyle(lineStyle[ix].color);\n\t\t\t\t\t\t\tctx.moveTo(x,y);\n\t\t\t\t\t\t\tif (lineStyle[ix].lineDotType == \"line\") { //直线连接\n\t\t\t\t\t\t\t\tctx.lineTo(x2, y2);\n\t\t\t\t\t\t\t}else if (lineStyle[ix].lineDotType == \"wave\") { //二次贝塞尔曲线连接\n\t\t\t\t\t\t\t\tctx.quadraticCurveTo(dis.x, dis.y, x2, y2);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//显示 x，y的值\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\tctx.setGlobalAlpha(1);//设置透明度\n\t\t\t\t\t\tctx.setFillStyle(dotStyle[ix].color);\n\t\t\t\t\t\tctx.setLineDash([dotStyle[ix].dash]);\n\t\t\t\t\t\tctx.arc(x, y, dotStyle[ix].arcR, 0, 2 * Math.PI);\n\t\t\t\t\t\tctx.fill();\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\n\t\t\t\t\t\tctx.setFillStyle(lineStyle[ix].color);\n\t\t\t\t\t\tctx.setTextBaseline(\"bottom\");\n\t\t\t\t\t\tctx.setFontSize(12);\n\t\t\t\t\t\tctx.fillText(dataY[indx], x, y-2);\n\t\t\t\t\t\t\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\tdataJSON.forEach((e, v) => {\n\t\t\t\t\tif (v == num && num != -1) {\n\t\t\t\t\t\tdrawLineData(e.x, e.y, v);\n\t\t\t\t\t} else if (num == -1) {\n\t\t\t\t\t\tdrawLineData(e.x, e.y, v);\n\t\t\t\t\t} else {\n\t\t\t\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tif (this.tapEvent != null && isHover != null) {\n\t\t\t\t\ttapDraw(this.tapEvent, elem);\n\t\t\t\t}\n\t\t\t\tctx.draw();\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style scoped>\n\t.pox{\n\t\tposition: relative;\n\t}\n\t.pox >>> .position-box{\n\t\tposition: absolute;\n\t\tz-index: 922;\n\t\tcolor: #fff;\n\t\tfont-size: 30rpx;\r\n\t\ttransition: linear 0.3s;\n\t}\r\n\t.pox >>> .item-box{\r\n\t\tpadding: 10rpx;\r\n\t\tbackground: rgba(0,0,0,0.7);\r\n\t}\n\t.legend{\r\n\t\ttext-align: right;\n\t\t/* background: rgba(255,255,255,0.9); */\n\t\t/* right: 0;\n\t\ttop: 0; */\n\t}\n\t.it-line{\n\t\tpadding: 15rpx;\n\t\tfont-size: 28rpx;\n\t\tdisplay: inline-block;\n\t\tvertical-align: middle;\n\t}\n\t.it-line:active{background: #f1f1f1;}\n\t.echarts{\n\t\twidth: 100%;\n\t\theight: 360rpx;\n\t\tdisplay: block;\n\t\tbackground: #fff;\r\n\t\tposition: relative;\r\n\t\tz-index: 1;\n\t\t/* border-bottom: 1rpx solid #ececec; */\n\t}\n\t.tip{\n\t\tpadding: 20rpx;color: #f00;font-size: 0.8em;\n\t}\n</style>","import mod from \"-!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./easy-Echarts-line.vue?vue&type=style&index=0&id=db2244ac&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/stylePostLoader.js!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--6-oneOf-1-2!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-3!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./easy-Echarts-line.vue?vue&type=style&index=0&id=db2244ac&scoped=true&lang=css&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1707117916415\n      var cssReload = require(\"C:/Users/Administrator/Desktop/HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  ","import { render, staticRenderFns, recyclableRender, components } from \"./easy-Echarts-line.vue?vue&type=template&id=db2244ac&scoped=true&\"\nvar renderjs\nimport script from \"./easy-Echarts-line.vue?vue&type=script&lang=js&\"\nexport * from \"./easy-Echarts-line.vue?vue&type=script&lang=js&\"\nimport style0 from \"./easy-Echarts-line.vue?vue&type=style&index=0&id=db2244ac&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"db2244ac\",\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"components/easy-Echarts-line/easy-Echarts-line.vue\"\nexport default component.exports","export * from \"-!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--17-0!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../HBuilderX.3.6.4.20220922/HBuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./easy-Echarts-line.vue?vue&type=template&id=db2244ac&scoped=true&\""],"sourceRoot":""}